#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Wed Aug 19 16:58:49 EDT 2015
#    from file 'tabletop.exp.txt'.
learn --off
#learn --only
#watch -c
#watch -L print
#learn -p
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 37
        ^failure-count 0
        ^success-count 0)
}


#   Discard the red square.
sp {elaborate*state*sentence*discard-the-red-square
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S122>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Discard the red square.|)
   (<w0> ^spelling |discard|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |square|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S122> ^action <A1010>
           ^arg1 <P90112>
           ^message-type command)
   (<A1010> ^handle discard
             ^item-type action)
   (<P90112> #^handle new-object-id1
             ^item-type object
             ^predicates <P90113>
             ^predicates-copied true)
   (<P90113> ^category object
             ^color red1
             ^dialog-object true
             ^shape square1
             ^visibility not-visible)
}


#   The goal is that the red square is on the garbage.
sp {elaborate*state*sentence*the-goal-is-that-the-red-square-is-on-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S236>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the red square is on the garbage.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |square|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |on|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |garbage|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S236> ^arg1 <G4>
           ^message-type object-description
           ^subclause <S313>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S313> ^arg1 <P90112>
           ^predicate <S512>)
   (<P90112> #^handle new-object-id1
             ^item-type object
             ^predicates <P90113>
             ^predicates-copied true)
   (<P90113> ^category object
             ^color red1
             ^dialog-object true
             ^shape square1
             ^visibility not-visible)
   (<S512> ^2 <L26>
           ^handle on1
           ^item-type predicate)
   (<L26> ^handle 3
          ^item-type object
          ^predicates <P90075>)
   (<P90075> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^name garbage
              )
}


#   Pick up the red square.
sp {elaborate*state*sentence*pick-up-the-red-square
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S535>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the red square.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |square|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S535> ^action <A1001>
           ^arg1 <P90112>
           ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
   (<P90112> #^handle new-object-id1
             ^item-type object
             ^predicates <P90113>
             ^predicates-copied true)
   (<P90113> ^category object
             ^color red1
             ^dialog-object true
             ^shape square1
             ^visibility not-visible)
}


#   Put the red square on the garbage.
sp {elaborate*state*sentence*put-the-red-square-on-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S658>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the red square on the garbage.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |square|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |garbage|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S658> ^action <A1000>
           ^arg1 <P90112>
           ^arg2 <S813>
           ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
   (<P90112> #^handle new-object-id1
             ^item-type object
             ^predicates <P90113>
             ^predicates-copied true)
   (<P90113> ^category object
             ^color red1
             ^dialog-object true
             ^shape square1
             ^visibility not-visible)
   (<S813> ^2 <L26>
           ^handle on1
           ^item-type predicate)
   (<L26> ^handle 3
          ^item-type object
          ^predicates <P90075>)
   (<P90075> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^name garbage
              )
}


#   Move the green sphere to the table.
sp {elaborate*state*sentence*move-the-green-sphere-to-the-table
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S844>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Move the green sphere to the table.|)
   (<w0> ^spelling |move|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |sphere|
         ^next <w4>)
   (<w4> ^spelling |to|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |table|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S844> ^action <A1008>
           ^arg1 <O8033>
           ^arg2 <S989>
           ^message-type command)
   (<A1008> ^handle move1
             ^item-type action)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90068>)
   (<P90068> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape sphere1
             ^size large1)
   (<S989> ^2 <L28>
           ^handle to1
           ^item-type predicate)
   (<L28> ^handle 6
          ^item-type object
          ^predicates <P90077>)
   (<P90077> ^arm-status not-grabbed
              
             ^category location
             ^name table
              )
}


#   The goal is that the green sphere is on the table.
sp {elaborate*state*sentence*the-goal-is-that-the-green-sphere-is-on-the-table
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1016>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the green sphere is on the table.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |green|
         ^next <w6>)
   (<w6> ^spelling |sphere|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |on|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |table|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S1016> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S1093>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S1093> ^arg1 <O8033>
            ^predicate <S1292>)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90068>)
   (<P90068> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape sphere1
             ^size large1
              )
   (<S1292> ^2 <L28>
            ^handle on1
            ^item-type predicate)
   (<L28> ^handle 6
          ^item-type location
          ^predicates <P90077>)
   (<P90077> ^arm-status not-grabbed
              
             ^category location
             ^name table
              )
}


#   Pick up the green sphere.
sp {elaborate*state*sentence*pick-up-the-green-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1315>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the green sphere.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |sphere|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S1315> ^action <A1001>
            ^arg1 <O8033>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90068>)
   (<P90068> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape sphere1
             ^size large1)
}


#   Put the green sphere on the table.
sp {elaborate*state*sentence*put-the-green-sphere-on-the-table
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1438>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the green sphere on the table.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |sphere|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |table|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S1438> ^action <A1000>
            ^arg1 <O8033>
            ^arg2 <S1593>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90068>)
   (<P90068> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape sphere1
             ^size large1)
   (<S1593> ^2 <L28>
            ^handle on1
            ^item-type predicate)
   (<L28> ^handle 6
          ^item-type object
          ^predicates <P90077>)
   (<P90077> ^arm-status not-grabbed
              
             ^category location
             ^name table
              )
}


#   Store the blue arch.
sp {elaborate*state*sentence*store-the-blue-arch
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1624>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Store the blue arch.|)
   (<w0> ^spelling |store|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |blue|
         ^next <w3>)
   (<w3> ^spelling |arch|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1624> ^action <A1009>
            ^arg1 <P90608>
            ^message-type command)
   (<A1009> ^handle store1
             ^item-type action)
   (<P90608> #^handle new-object-id2
             ^item-type object
             ^predicates <P90609>
             ^predicates-copied true)
   (<P90609> ^category object
             ^color blue1
             ^dialog-object true
             ^shape arch1
             ^visibility not-visible)
}


#   Open the pantry.
sp {elaborate*state*sentence*open-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1738>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Open the pantry.|)
   (<w0> ^spelling |open|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |pantry|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S1738> ^action <A1003>
            ^arg1 <L24>
            ^message-type command)
   (<A1003> ^action-type primitive
             ^handle open1
             ^item-type action)
   (<L24> ^handle 1
          ^item-type object
          ^predicates <P90073>)
   (<P90073> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^name pantry
              )
}


#   Pick up the blue arch.
sp {elaborate*state*sentence*pick-up-the-blue-arch
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1835>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the blue arch.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |blue|
         ^next <w4>)
   (<w4> ^spelling |arch|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S1835> ^action <A1001>
            ^arg1 <P90608>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
   (<P90608> #^handle new-object-id2
             ^item-type object
             ^predicates <P90609>
             ^predicates-copied true)
   (<P90609> ^category object
             ^color blue1
             ^dialog-object true
             ^shape arch1
             ^visibility not-visible)
}


#   Put the blue arch on the pantry.
sp {elaborate*state*sentence*put-the-blue-arch-on-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1958>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the blue arch on the pantry.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |blue|
         ^next <w3>)
   (<w3> ^spelling |arch|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |pantry|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S1958> ^action <A1000>
            ^arg1 <P90608>
            ^arg2 <S2113>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
   (<P90608> #^handle new-object-id2
             ^item-type object
             ^predicates <P90609>
             ^predicates-copied true)
   (<P90609> ^category object
             ^color blue1
             ^dialog-object true
             ^shape arch1
             ^visibility not-visible)
   (<S2113> ^2 <L24>
            ^handle on1
            ^item-type predicate)
   (<L24> ^handle 1
          ^item-type object
          ^predicates <P90073>)
   (<P90073> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^name pantry
              )
}


#   Close the pantry.
sp {elaborate*state*sentence*close-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2144>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Close the pantry.|)
   (<w0> ^spelling |close|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |pantry|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S2144> ^action <A1004>
            ^arg1 <L24>
            ^message-type command)
   (<A1004> ^action-type primitive
             ^handle close1
             ^item-type action)
   (<L24> ^handle 1
          ^item-type object
          ^predicates <P90073>)
   (<P90073> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^name pantry
              )
}


#   Cook the small steak.
sp {elaborate*state*sentence*cook-the-small-steak
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2241>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Cook the small steak.|)
   (<w0> ^spelling |cook|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |small|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S2241> ^action <A1012>
            ^arg1 <R11584>
            ^message-type command)
   (<A1012> ^handle cook1
             ^item-type action)
  ( <R11584> # ^handle new-object-id3 
               ^item-type object 
               ^predicates <P90872>)
    (<P90872> ^category object ^dialog-object true ^shape steak1 ^size small1
           ^visibility not-visible)
}


#   The goal is that the small steak is cooked and the stove is off.
sp {elaborate*state*sentence*the-goal-is-that-the-small-steak-is-cooked-and-the-stove-is-off
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 15)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2355>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the small steak is cooked and the stove is off.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |small|
         ^next <w6>)
   (<w6> ^spelling |steak|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |cooked|
         ^next <w9>)
   (<w9> ^spelling |and|
         ^next <w10>)
   (<w10> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |stove|
         ^next <w12>)
   (<w12> ^spelling |is|
         ^next <w13>)
   (<w13> ^spelling |off|
         ^next <w14>)
   (<w14> ^spelling |.|
         ^next nil)
   (<S2355> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S2433>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S2433> ^subclause <S2558>
            ^subclause <S2701>)
   (<S2558> ^arg1 <R11584>
            ^predicate <C18>)
  ( <R11584> # ^handle new-object-id3 
               ^item-type object 
               ^predicates <P90872>)
    (<P90872> ^category object ^dialog-object true ^shape steak1 ^size small1
           ^visibility not-visible)
   (<C18> ^handle cooked
           ^item-type predicate
           ^property <P1>)
   (<P1> ^handle modifier)
   (<S2701> ^arg1 <L25>
            ^predicate <X1000>)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
   (<X1000> ^handle turned-off1
             ^item-type predicate
             ^property <Y1001>)
   (<Y1001> ^handle on-off)
}


#   Pick up the small steak.
sp {elaborate*state*sentence*pick-up-the-small-steak
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 16)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2758>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the small steak.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |small|
         ^next <w4>)
   (<w4> ^spelling |steak|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S2758> ^action <A1001>
            ^arg1 <R11584>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
  ( <R11584> # ^handle new-object-id3 
               ^item-type object 
               ^predicates <P90872>)
    (<P90872> ^category object ^dialog-object true ^shape steak1 ^size small1
           ^visibility not-visible)
}


#   Put the small steak on the stove.
sp {elaborate*state*sentence*put-the-small-steak-on-the-stove
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 17)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2881>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the small steak on the stove.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |small|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |stove|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S2881> ^action <A1000>
            ^arg1 <R11584>
            ^arg2 <S3036>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
  ( <R11584> # ^handle new-object-id3 
               ^item-type object 
               ^predicates <P90872>)
    (<P90872> ^category object ^dialog-object true ^shape steak1 ^size small1
           ^visibility not-visible)
   (<S3036> ^2 <L25>
            ^handle on1
            ^item-type predicate)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Turn on the stove.
sp {elaborate*state*sentence*turn-on-the-stove3
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 18)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3067>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn on the stove.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |on|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |stove|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3067> ^action <A1015>
            ^arg1 <L25>
            ^message-type command)
   (<A1015> ^action-type primitive
             ^handle turn-on1
             ^item-type action)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Wait until the steak is cooked.
sp {elaborate*state*sentence*wait-until-the-steak-is-cooked3
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 19)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3173>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Wait until the steak is cooked.|)
   (<w0> ^spelling |wait|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |is|
         ^next <w5>)
   (<w5> ^spelling |cooked|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S3173> ^action <A1007>
            ^arg2 <S3207>
            ^message-type command)
   (<A1007> #^handle wait
             ^item-type action)
   (<S3207> ^until-clause <S3315>)
   (<S3315> ^arg1 <R11584>
            ^predicate <C18>)
  ( <R11584> # ^handle new-object-id3 
               ^item-type object 
               ^predicates <P90872>)
    (<P90872> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size small1
           ^visibility not-visible)
   (<C18> ^handle cooked
           ^item-type predicate
           ^property <P1>)
   (<P1> ^handle modifier)
}


#   Turn off the stove.
sp {elaborate*state*sentence*turn-off-the-stove3
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 20)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3376>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn off the stove.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |off|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |stove|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3376> ^action <A1016>
            ^arg1 <L25>
            ^message-type command)
   (<A1016> ^action-type primitive
             ^handle turn-off1
             ^item-type action)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Serve the large steak.
sp {elaborate*state*sentence*serve-the-large-steak3
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 21)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3482>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Serve the large steak.|)
   (<w0> ^spelling |serve|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |large|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3482> ^action <A1017>
            ^arg1 <R12441>
            ^message-type command)
   (<A1017> ^item-type action)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object ^dialog-object true ^shape steak1 ^size large1
           ^visibility not-visible)
}


#   The goal is that the large steak is cooked and the large steak is on the table.
sp {elaborate*state*sentence*the-goal-is-that-the-large-steak-is-cooked-and-the-large-steak-is-on-the-table
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 22)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3596>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the large steak is cooked and the large steak is on the table.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |large|
         ^next <w6>)
   (<w6> ^spelling |steak|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |cooked|
         ^next <w9>)
   (<w9> ^spelling |and|
         ^next <w10>)
   (<w10> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |large|
         ^next <w12>)
   (<w12> ^spelling |steak|
         ^next <w13>)
   (<w13> ^spelling |is|
         ^next <w14>)
   (<w14> ^spelling |on|
         ^next <w15>)
   (<w15> ^spelling |the|
         ^next <w16>)
   (<w16> ^spelling |table|
         ^next <w17>)
   (<w17> ^spelling |.|
         ^next nil)
   (<S3596> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S3675>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S3675> ^subclause <S3800>
            ^subclause <S3968>)
   (<S3800> ^arg1 <R12441>
            ^predicate <C18>)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object ^dialog-object true ^shape steak1 ^size large1
           ^visibility not-visible)
   (<C18> ^handle cooked
           ^item-type predicate
           ^property <P1>)
   (<P1> ^handle modifier)
   (<S3968> ^arg1 <R12441>
            ^predicate <S4042>)
   (<S4042> ^2 <L28>
            ^handle on1
            ^item-type predicate)
   (<L28> ^handle 6
          ^item-type object
          ^predicates <P90077>)
   (<P90077> ^arm-status not-grabbed
              
             ^category location
             ^name table
              )
}


#   Pick up the large steak.
sp {elaborate*state*sentence*pick-up-the-large-steak7
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 23)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4065>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the large steak.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |large|
         ^next <w4>)
   (<w4> ^spelling |steak|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S4065> ^action <A1001>
            ^arg1 <R12441>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size large1
              ^visibility not-visible)
}


#   Put the large steak on the stove.
sp {elaborate*state*sentence*put-the-large-steak-on-the-stove4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 24)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4188>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the large steak on the stove.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |large|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |stove|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S4188> ^action <A1000>
            ^arg1 <R12441>
            ^arg2 <S4343>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size large1
              ^visibility not-visible)
   (<S4343> ^2 <L25>
            ^handle on1
            ^item-type predicate)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Turn on the stove.
sp {elaborate*state*sentence*turn-on-the-stove4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 25)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4374>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn on the stove.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |on|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |stove|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S4374> ^action <A1015>
            ^arg1 <L25>
            ^message-type command)
   (<A1015> ^action-type primitive
             ^handle turn-on1
             ^item-type action)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Wait until the large steak is cooked.
sp {elaborate*state*sentence*wait-until-the-large-steak-is-cooked4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 26)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4480>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Wait until the large steak is cooked.|)
   (<w0> ^spelling |wait|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |large|
         ^next <w4>)
   (<w4> ^spelling |steak|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |cooked|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S4480> ^action <A1007>
            ^arg2 <S4514>
            ^message-type command)
   (<A1007> ^handle wait1
             ^item-type action)
   (<S4514> ^until-clause <S4651>)
   (<S4651> ^arg1 <R12441>
            ^predicate <C18>)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size large1
              ^visibility not-visible)
   (<C18> ^handle cooked
           ^item-type predicate
           ^property <P1>)
   (<P1> ^handle modifier)
}


#   Turn off the stove.
sp {elaborate*state*sentence*turn-off-the-stove4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 27)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4712>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn off the stove.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |off|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |stove|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S4712> ^action <A1016>
            ^arg1 <L25>
            ^message-type command)
   (<A1016> ^action-type primitive
             ^handle turn-off1
             ^item-type action)
   (<L25> ^handle 2
          ^item-type object
          ^predicates <P90074>)
   (<P90074> ^arm-status not-grabbed
              
             ^category location
             ^door closed
             ^heat off
             ^name stove
              )
}


#   Pick up the large steak.
sp {elaborate*state*sentence*pick-up-the-large-steak4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 28)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4818>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the large steak.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |large|
         ^next <w4>)
   (<w4> ^spelling |steak|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S4818> ^action <A1001>
            ^arg1 <R12441>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size large1
              ^visibility not-visible)
}


#   Put the large steak on the table.
sp {elaborate*state*sentence*put-the-large-steak-on-the-table4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 29)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4941>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the large steak on the table.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |large|
         ^next <w3>)
   (<w3> ^spelling |steak|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |table|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S4941> ^action <A1000>
            ^arg1 <R12441>
            ^arg2 <S5096>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action)
   (<R12441> #^handle new-object-id4 
             ^item-type object 
             ^predicates <P91216>
             ^predicates-copied true)
    (<P91216> ^category object 
              ^dialog-object true 
              ^shape steak1 
              ^size large1
              ^visibility not-visible)
   (<S5096> ^2 <L28>
            ^handle on1
            ^item-type predicate)
   (<L28> ^handle 6
          ^item-type object
          ^predicates <P90077>)
   (<P90077> ^arm-status not-grabbed
              
             ^category location
             ^name table
              )
}


#   Stack the red block and the green block.
#   FAILED!
sp {elaborate*state*sentence*stack-the-red-block-and-the-green-box1
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 30)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Stack the red block and the green box.|)
   (<w0> ^spelling |stack|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |block|
         ^next <w4>)
   (<w4> ^spelling |and|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |green|
         ^next <w7>)
   (<w7> ^spelling |box|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}

sp {elaborate*state*sentence*stack-the-red-block-and-the-green-box-and-then-purple-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 31)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Stack the red block and the green box and the purple block.|)
   (<w0> ^spelling |stack|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |block|
         ^next <w4>)
   (<w4> ^spelling |and|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |green|
         ^next <w7>)
   (<w7> ^spelling |box|
         ^next <w9>)
   (<w9> ^spelling |and|
         ^next <w10>)
   (<w10> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |purple|
         ^next <w12>)
   (<w12> ^spelling |block|
         ^next <w13>)
   (<w13> ^spelling |.|
         ^next nil)
}
#   The goal is that the red block is on the green block.
sp {elaborate*state*sentence*the-goal-is-that-the-red-block-is-on-the-green-box
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 32)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5360>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the red block is on the green box.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |block|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |on|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |green|
         ^next <w11>)
   (<w11> ^spelling |box|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
   (<S5360> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S5437>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S5437> ^arg1 <O8030>
            ^predicate <S5653>)
   (<O8030> ^handle small-red-triangle1
            ^item-type object
            ^predicates <P90065>)
   (<P90065> ^arm-status not-grabbed
             ^category block
             ^color red1
             ^movable true
             ^shape triangle1
             ^size small1
              )
   (<S5653> ^2 <P91891>
            ^handle on1
            ^item-type predicate)
   (<P91891> #^handle new-object-id4
             ^item-type object
             ^predicates <P91892>
             ^predicates-copied true)
   (<P91892> ^category object
             ^color green1
             ^dialog-object true
             ^visibility not-visible)
}

#   The goal is that the red block is on the green block.
sp {elaborate*state*sentence*the-goal-is-that-the-red-block-is-on-the-green-box-and-
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 33)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the red block is on the green box and the green box is on the purple block.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |block|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |on|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |green|
         ^next <w11>)
   (<w11> ^spelling |box|
         ^next <w12>)
   (<w12> ^spelling |and|
         ^next <w13>)
   (<w13> ^spelling |the|
         ^next <w14>)
   (<w14> ^spelling |green|
         ^next <w15>)
   (<w15> ^spelling |box|
         ^next <w16>)
   (<w16> ^spelling |is|
         ^next <w17>)
   (<w17> ^spelling |on|
         ^next <w18>)
   (<w18> ^spelling |the|
         ^next <w19>)
   (<w19> ^spelling |purple|
         ^next <w20>)
   (<w20> ^spelling |block|
         ^next <w21>)
   (<w21> ^spelling |.|
         ^next nil)
}





sp {elaborate*state*sentence*if-the-number-of-blocks-on-a-boat-is-one-then-it-is-vacant
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 34)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the number of cannibals on a boat is one then it is green.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |number|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |cannibals|
         ^next <w5>)
   (<w5> ^spelling |on|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |boat|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |one|
         ^next <w10>)
   (<w10> ^spelling |then|
         ^next <w11>)
   (<w11> ^spelling |it|
         ^next <w12>)
   (<w12> ^spelling |is|
         ^next <w13>)
   (<w13> ^spelling |green|
         ^next <w17>)
   (<w17> ^spelling |.|
         ^next nil)
  }


sp {elaborate*state*sentence*the-goal-is-that-the-number-of-blocks-on-a-boat-is-one
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 35)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the number of cannibals on a boat is one.|)
   (<w0> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |goal|
         ^next <w12>)
   (<w12> ^spelling |is|
         ^next <w13>)
   (<w13> ^spelling |that|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |number|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |cannibals|
         ^next <w5>)
   (<w5> ^spelling |on|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |boat|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |one|
         ^next <w17>)
   (<w17> ^spelling |.|
         ^next nil)
  }


sp {elaborate*state*sentence*the-goal-is-that-the-number-of-cannibals-is-one
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 36)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the number of cannibals is one.|)
   (<w0> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |goal|
         ^next <w12>)
   (<w12> ^spelling |is|
         ^next <w13>)
   (<w13> ^spelling |that|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |number|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |cannibals|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |one|
         ^next <w17>)
   (<w17> ^spelling |.|
         ^next nil)
  }


sp {elaborate*state*sentence*if-the-number-of-cannibals-on-the-opposite-bank-is-more-than-the-number-of-missionaries-on-the-bank-then-you-lose
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 37)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the number of cannibals on the bank is more than the number of missionaries on the bank then you lose.|)
   (<w0> ^spelling |if|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |number|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |cannibals|
         ^next <w7>)
   (<w7> ^spelling |on|
        ^next <w71>)
   (<w71> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |bank|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |more|
         ^next <w12>)
   (<w12> ^spelling |than|
         ^next <w13>)
   (<w13> ^spelling |the|
         ^next <w14>)
   (<w14> ^spelling |number|
         ^next <w15>)
   (<w15> ^spelling |of|
         ^next <w16>)
   (<w16> ^spelling |missionaries|
         ^next <w17>)
   (<w17> ^spelling |on|
         ^next <w18>)
   (<w18> ^spelling |the|
         ^next <w19>)
   (<w19> ^spelling |bank|
         ^next <w20>)
   (<w20> ^spelling |then|
         ^next <w21>)
   (<w21> ^spelling |you|
         ^next <w22>)
   (<w22> ^spelling |lose|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
}

