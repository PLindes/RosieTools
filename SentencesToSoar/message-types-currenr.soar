#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Tue Jul 07 12:37:03 EDT 2015
#    from file 'message-types-currenr.txt'.

#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 34
        ^failure-count 0
        ^success-count 0)
}


#Message Types for Rosie – The Syntax of Semantics
#June 24, 2015
#John E. Laird
#Format
#^arg <obj-green> : Indexed top state object in WM
#^id @g1 : Semantic LTI for concept
#^name green1 : Constant symbol generated by parser/perception
#Message-type:  failed-parse  [knows all of the words, but can’t parse the sentence.]
#Example: Green the store block.
sp {elaborate*state*sentence*green-the-store-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Green the store block.|)
   (<w0> ^spelling |green|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |store|
         ^next <w3>)
   (<w3> ^spelling |block|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S9> ^message-type failed-parse)
}


#Message-type:  yes   
#Construction *-yes-T 
#Examples: yes. yeah. ok. 
sp {elaborate*state*sentence*yes
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Yes.|)
   (<w0> ^spelling |yes|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S9> ^message-type yes)
}


#Message-type:  no
#Construction *-no-T
#Examples: no. nope.
sp {elaborate*state*sentence*no
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |No.|)
   (<w0> ^spelling |no|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S9> ^message-type no)
}


#Message-type: finished
#Construction *-finished-T
#Examples: done. finished.
sp {elaborate*state*sentence*finished
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Finished.|)
   (<w0> ^spelling |finished|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S9> ^message-type finished)
}


#Message type:  adjective-definition 
#Construction: *-ADJ-is-DP-T 
#       If already defined (green is known to be a color), this becomes ^message-type ignore
#Examples: Purple is a color. Triangle is a shape. Large is a size.
sp {elaborate*state*sentence*purple-is-a-color
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Purple is a color.|)
   (<w0> ^spelling |purple|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |color|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <p1>
         ^message-type adjective-definition
         ^predicate.id <c1>)
   (<p1> ^name purple1)
   (<c1> ^name color)
}


#Message type:  object-description 
#Construction: *-DP-is-ADJ/DP/PP-T
#Examples: The ball is red. The ball is a sphere. The ball is in the pantry. The ball is to the right of the red sphere.
sp {elaborate*state*sentence*the-sphere-is-green
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The sphere is green.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |sphere|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-sphere>
         ^message-type object-description
         ^predicate.id <g1>)
   (<g1> ^name green1)
}


sp {elaborate*state*sentence*the-red-triangle-is-on-the-big-green-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The red triangle is on the big green block.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |red|
         ^next <w2>)
   (<w2> ^spelling |triangle|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |big|
         ^next <w7>)
   (<w7> ^spelling |green|
         ^next <w8>)
   (<w8> ^spelling |block|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-red-triangle>
         ^message-type object-description
         ^relation <S10>)
   (<S10> ^arg2 <obj-big-green>
          ^id <p1>)
   (<p1> ^name on1)
}


sp {elaborate*state*sentence*the-red-triangle
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The red triangle.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |red|
         ^next <w2>)
   (<w2> ^spelling |triangle|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-red-triangle>
         ^message-type object-description)
}


sp {elaborate*state*sentence*the-red-triangle-on-the-large-green-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The red triangle on the large green block.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |red|
         ^next <w2>)
   (<w2> ^spelling |triangle|
         ^next <w3>)
   (<w3> ^spelling |on|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |large|
         ^next <w6>)
   (<w6> ^spelling |green|
         ^next <w7>)
   (<w7> ^spelling |block|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-red-triangle>
         ^message-type object-description)
}


sp {elaborate*state*sentence*the-red-one
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The red one.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |red|
         ^next <w2>)
   (<w2> ^spelling |one|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-red>
         ^message-type object-description)
}


#Message type:  object-description 
#Construction: *-DP-is-ADJ/DP
#These are "abstract" but primitive (known) objects, including "game" and "task".
sp {elaborate*state*sentence*the-game-is-tictactoe
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The game is tictactoe.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |game|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |tictactoe|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <S10>
         ^message-type object-description
         ^predicate.id <t1>)
   (<S10> ^name game)
   (<t1> ^name tictactoe)
}


sp {elaborate*state*sentence*the-task-is-done
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The task is done.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |task|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |done|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <S10>
         ^message-type object-description
         ^predicate.id <t1>)
   (<S10> ^name task)
   (<t1> ^name task-completed)
}


#Message type:  object-description 
#Construction: *-This-is-DP-T
#Examples: This is a large red block. This is red. This is to the right of the sphere. This is in the pantry.
sp {elaborate*state*sentence*this-is-red
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |This is red.|)
   (<w0> ^spelling |this|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S9> ^arg1 <obj-this>
         ^message-type object-description
         ^predicate.id <r1>)
   (<r1> ^name red1)
}


sp {elaborate*state*sentence*this-is-a-big-red-triangle
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S147>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |This is a big red triangle.|)
   (<w0> ^spelling |this|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |big|
         ^next <w4>)
   (<w4> ^spelling |red|
         ^next <w5>)
   (<w5> ^spelling |triangle|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S147> ^arg1 <obj-this>
           ^message-type object-description
           ^predicate.id <p1>
           ^predicate.id <p2>
           ^predicate.id <p3>)
   (<p1> ^name large1)
   (<p2> ^name red1)
   (<p3> ^name triangle1)
}


#Message type:  what-is-question 
#Construction: *-What-is-PP-QT
#Examples: What is in the pantry? What is to the left of the red block?
sp {elaborate*state*sentence*what-is-inside-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 15)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |What is inside the pantry?|)
   (<w0> ^spelling |what|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |inside|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |pantry|
         ^next <w5>)
   (<w5> ^spelling |?|
         ^next nil)
   (<S9> ^relation <S10>
         ^message-type what-is-question)
   (<S10> ^arg2 <obj-pantry>
          ^id <r1>)
   (<r1> ^name in1)
}


#Message type:  what-is-question 
#Construction: *-What-is-DP-QT 
#Examples: What is this?
sp {elaborate*state*sentence*what-is-this
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 16)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |What is this?|)
   (<w0> ^spelling |what|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |this|
         ^next <w3>)
   (<w3> ^spelling |?|
         ^next nil)
   (<S9> ^message-type what-is-question
         ^arg1 <obj-this>)
}


#Construction: *-What-N-is-DP/THIS-QT
#Examples: What size is the green sphere? What shape is this?
sp {elaborate*state*sentence*what-size-is-the-green-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 17)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |What size is the green sphere?|)
   (<w0> ^spelling |what|
         ^next <w1>)
   (<w1> ^spelling |size|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |green|
         ^next <w5>)
   (<w5> ^spelling |sphere|
         ^next <w6>)
   (<w6> ^spelling |?|
         ^next nil)
   (<S9> ^predicate <S10>
         ^arg1 <obj-green-sphere>
         ^message-type what-is-question)
   (<S10> ^id <c1>)
   (<c1> ^name color1)
}


sp {elaborate*state*sentence*what-is-on-the-red-triangle
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 18)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |What is on the red triangle?|)
   (<w0> ^spelling |what|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |on|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |red|
         ^next <w5>)
   (<w5> ^spelling |triangle|
         ^next <w6>)
   (<w6> ^spelling |?|
         ^next nil)
   (<S9> ^relation <S10>
         ^message-type what-is-question)
   (<S10> ^arg2 <obj-red-triangle>
          ^id <r1>)
   (<r1> ^name on1)
}


#Message type:  where-is-question 
#Construction: *-Where-is-DP-QT 
#Examples: Where is the green block?
sp {elaborate*state*sentence*where-is-the-red-triangle
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 19)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Where is the red triangle?|)
   (<w0> ^spelling |where|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |triangle|
         ^next <w5>)
   (<w5> ^spelling |?|
         ^next nil)
   (<S9> ^message-type where-is-question
         ^arg1 <obj-red-triangle>)
}


#Message type:  command 
#Construction: *-VP-T 
#Examples: Store the red sphere, put the green large block in the pantry, put the block to the right of the sphere
sp {elaborate*state*sentence*clean-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 20)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Clean the kitchen.|)
   (<w0> ^spelling |clean|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |kitchen|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^message-type command
         ^arg1 <obj-kitchen>)
   (<a1> ^name cleanup1)
}


## Implicit destination
sp {elaborate*state*sentence*discard-the-large-green-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 21)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Discard the large green block.|)
   (<w0> ^spelling |discard|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |large|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |block|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^message-type command
         ^arg1 <obj-large-green>)
   (<a1> ^name discard1)
}


## Implicit destination with prepositional modification
sp {elaborate*state*sentence*store-the-large-green-block-on-the-red-triangle
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 22)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Store the large green block on the red triangle.|)
   (<w0> ^spelling |store|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |large|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |block|
         ^next <w5>)
   (<w5> ^spelling |on|
         ^next <w6>)
   (<w6> ^spelling |the|
         ^next <w7>)
   (<w7> ^spelling |red|
         ^next <w8>)
   (<w8> ^spelling |triangle|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^arg2 <S10>
         ^message-type command
         ^arg1 <obj-large-green>)
   (<S10> ^arg2 <obj-small-red-triangle>
          ^id <p1>)
   (<a1> ^name store1)
   (<p1> ^name on1)
}


### Explicit Destination
sp {elaborate*state*sentence*put-the-green-sphere-in-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 23)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the green sphere in the pantry.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |sphere|
         ^next <w4>)
   (<w4> ^spelling |in|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |pantry|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^arg2 <S10>
         ^message-type command
         ^arg1 <obj-green-sphere>)
   (<S10> ^arg2 <obj-pantry>
          ^id <p1>)
   (<a1> ^name putdown1)
   (<p1> ^name in1)
}


### Adjunct action
sp {elaborate*state*sentence*turn-the-stove-on
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 24)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1520>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn the stove on.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |stove|
         ^next <w3>)
   (<w3> ^spelling |on|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1520> ^action.id <a1>
            ^adjunct on-lti1
            ^message-type command
            ^arg1 <obj-stove>)
   (<a1> ^name turn1)
}


## Two word verb
sp {elaborate*state*sentence*put-down-the-green-sphere-in-the-pantry
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 25)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put down the green sphere in the pantry.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |sphere|
         ^next <w5>)
   (<w5> ^spelling |in|
         ^next <w6>)
   (<w6> ^spelling |the|
         ^next <w7>)
   (<w7> ^spelling |pantry|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^arg2 <S10>
         ^message-type command
         ^arg1 <obj-green-sphere>)
   (<S10> ^arg2 <obj-pantry>
          ^id <p1>)
   (<a1> ^name putdown1)
   (<p1> ^name in1)
}


#### Relational reference of object and explicit destination
sp {elaborate*state*sentence*move-the-orange-triangle-on-the-red-triangle-to-the-stove
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 26)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |move the orange triangle on the red triangle to the stove.|)
   (<w0> ^spelling |move|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |orange|
         ^next <w3>)
   (<w3> ^spelling |triangle|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |red|
         ^next <w7>)
   (<w7> ^spelling |triangle|
         ^next <w8>)
   (<w8> ^spelling |to|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |stove|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S9> ^action.id <a1>
         ^arg2 <S10>
         ^message-type command
         ^arg1 <obj-orange-triangle>)
   (<S10> ^arg1 <obj-stove>
          ^id <p1>)
   (<a1> ^name move1)
   (<p1> ^name in1)
}


#ADD 
sp {elaborate*state*sentence*is-the-green-sphere-on-the-table
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 27)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Is the green sphere on the table?|)
   (<w0> ^spelling |is|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |sphere|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |table|
         ^next <w7>)
   (<w7> ^spelling |?|
         ^next nil)
}


sp {elaborate*state*sentence*is-the-red-arch-to-the-right-of-the-blue-l-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 28)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Is the red arch to the right of the blue l-block?|)
   (<w0> ^spelling |is|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |red|
         ^next <w3>)
   (<w3> ^spelling |arch|
         ^next <w4>)
   (<w4> ^spelling |to|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |right|
         ^next <w7>)
   (<w7> ^spelling |of|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |blue|
         ^next <w10>)
   (<w10> ^spelling |l-block|
         ^next <w11>)
   (<w11> ^spelling |?|
         ^next nil)
}


sp {elaborate*state*sentence*is-this-green
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 29)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Is this green?|)
   (<w0> ^spelling |is|
         ^next <w1>)
   (<w1> ^spelling |this|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |?|
         ^next nil)
}


sp {elaborate*state*sentence*is-the-green-block-a-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 30)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Is the green block a sphere?|)
   (<w0> ^spelling |is|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |green|
         ^next <w3>)
   (<w3> ^spelling |block|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |sphere|
         ^next <w6>)
   (<w6> ^spelling |?|
         ^next nil)
}


sp {elaborate*state*sentence*right-is-a-relation
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 31)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Right is a relation.|)
   (<w0> ^spelling |right|
         ^next <w1>)
   (<w1> ^spelling |is|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |relation|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
}


#New  verb (grab) – first time encounter this word.
sp {elaborate*state*sentence*grab-the-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 32)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S9>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |grab the sphere.|)
   (<w0> ^spelling |grab|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |sphere|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S9> ^action <C587>
         ^message-type new-verb
         ^interaction-status <S203>
         ^message-type command
         ^new-word <N22>
         ^arg1 <C637>)
   (<C587> ^unknown grab)
   (<S203> ^type index-word-failure
           ^word grab)
   (<N22> ^spelling grab
          ^structure-type V)
   (<C637> ^id sphere-lti1)
}


#-asks for category of grab.
## Ungrounded object
sp {elaborate*state*sentence*store-the-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 33)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S189>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |store the sphere.|)
   (<w0> ^spelling |store|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |sphere|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S189> ^action <O25>
           ^arg2 <S202>
           ^interaction-status <I62>
           ^message-type command
           ^arg1 <C575>)
   (<O25> ^id soar-store1)
   (<S202> ^arg1 <P271>
           ^relation on1)
   (<I62> ^target-object <I60>
          ^type index-object-failure)
   (<C575> ^shape sphere1)
}


sp {elaborate*state*sentence*store-the-medium-red-sphere
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 34)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S332>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |store the medium red sphere.|)
   (<w0> ^spelling |store|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |medium|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |sphere|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S332> ^action <O25>
           ^arg2 <S345>
           ^interaction-status <I73>
           ^message-type command
           ^object <C1040>
           ^object <C1090>
           ^object <C990>)
   (<O25> ^id soar-store1)
   (<S345> ^arg1 <P271>
           ^relation on1)
   (<I73> ^target-object <I71>
          ^type index-object-failure)
   (<C1040> ^color red1)
   (<C1090> ^shape sphere1)
   (<C990> ^size medium1)
}


#########Available, but not yet that useful yet.
#Message type:  object-action 
#Construction: *-DP-VP-T  / *-PN-VP-T
#Examples: The red block fell in the pantry.
#^arg0 block1
#^action fell1
#^arg1 pantry1
#^relation *need to check*
