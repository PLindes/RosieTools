#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Thu Sep 01 15:02:22 EDT 2016
#    from file 'risk.exp.txt'.
chunk off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 7
        ^failure-count 0
        ^success-count 0)
}


#   The name of the game is risk.
sp {elaborate*state*sentence*the-name-of-the-game-is-risk
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S124>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is risk.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |risk|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S124> ^arg1 <S243>
           ^message-type object-description
           ^predicate <N10069>)
   (<S243> ^2 <S244>
           ^handle of1
           ^item-type predicate)
   (<S244> ^2 <N10046>
           ^handle name1)
   (<N10046> ^handle game1
             ^property <C62>)
   (<C62> ^handle concept
           ^type conceptual)
   (<N10069> # ^handle #risk1
             ^item-type predicate
             ^word-structure <N10068>)
   (<N10068> ^referent <R10192>
              ^spelling risk)
   (<R10192> ^handle risk1
              ^word-structure <N10068>)
}


#   The name of an action is attack.
sp {elaborate*state*sentence*the-name-of-an-action-is-attack
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S301>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is attack.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |attack|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S301> ^arg1 <S424>
           ^message-type object-description
           ^predicate <N10114>)
   (<S424> ^2 <S425>
           ^handle of1
           ^item-type predicate)
   (<S425> ^2 <R10292>
           ^handle name1)
   (<R10292> ^action action)
   (<N10114> ^handle attack
             ^item-type predicate
             ^procedural <E17>
             ^type action)
   (<E17> ^op_name initiate-attack)
}


#   If a captured location has more than one soldier on it then you can attack an enemy location that is next to the captured location.
sp {elaborate*state*sentence*if-a-captured-location-has-more-than-one-soldier-on-it-then-you-can-attack-an-enemy-location-that-is-next-to-the-captured-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S482>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a captured location has more than one soldier on it then you can attack an enemy location that is next to the captured location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |captured|
         ^next <w3>)
   (<w3> ^spelling |location|
         ^next <w4>)
   (<w4> ^spelling |has|
         ^next <w5>)
   (<w5> ^spelling |more|
         ^next <w6>)
   (<w6> ^spelling |than|
         ^next <w7>)
   (<w7> ^spelling |one|
         ^next <w8>)
   (<w8> ^spelling |soldier|
         ^next <w9>)
   (<w9> ^spelling |on|
         ^next <w10>)
   (<w10> ^spelling |it|
         ^next <w11>)
   (<w11> ^spelling |then|
         ^next <w12>)
   (<w12> ^spelling |you|
         ^next <w13>)
   (<w13> ^spelling |can|
         ^next <w14>)
   (<w14> ^spelling |attack|
         ^next <w15>)
   (<w15> ^spelling |an|
         ^next <w16>)
   (<w16> ^spelling |enemy|
         ^next <w17>)
   (<w17> ^spelling |location|
         ^next <w18>)
   (<w18> ^spelling |that|
         ^next <w19>)
   (<w19> ^spelling |is|
         ^next <w20>)
   (<w20> ^spelling |next|
         ^next <w21>)
   (<w21> ^spelling |to|
         ^next <w22>)
   (<w22> ^spelling |the|
         ^next <w23>)
   (<w23> ^spelling |captured|
         ^next <w24>)
   (<w24> ^spelling |location|
         ^next <w25>)
   (<w25> ^spelling |.|
         ^next nil)
   (<S482> ^if-subclause <S600>
           ^message-type conditional
           ^then-subclause <S1030>)
   (<S600> ^action <N10144>
           ^agent <P90216>
           ^predicate <S730>)
   (<N10144> ^handle has
             ^item-type action
             ^procedural <E10>
             ^type action)
   (<E10> ^op_name initiate-has1)
   (<P90216> #^handle new-object-id2
             ^item-type location
             ^predicates <P90217>
             ^predicates-copied true)
   (<P90217> ^category location
             ^dialog-object true
             ^property captured
             ^visibility unknown-visible)
   (<S730> ^2 <P90235>
           ^handle more-than1
           ^item-type predicate)
   (<P90235> #^handle new-object-id3
             ^item-type object
             ^predicates <P90236>
             ^predicates-copied true
             ^relation <S724>)
   (<P90236> ^category object
             ^dialog-object true
             ^number 1
             ^shape soldier1
             ^visibility unknown-visible)
   (<S724> ^2 <P90216>
           ^handle on1)
   (<S1030> ^action <N10184>
            ^action-modifier <N10182>
            ^agent <N10180>
            ^arg1 <P90297>)
   (<N10184> ^handle attack
             ^item-type action
             ^procedural <E17>
             ^type action)
   (<E17> ^op_name initiate-attack)
   (<N10182> ^handle can)
   (<N10180> ^handle rosie
             ^property <P90131>)
   (<P90131> ^handle handle
              ^type visual)
   (<P90297> #^handle new-object-id4
             ^item-type location
             ^predicates <P90298>
             ^predicates-copied true
             ^relation <S1009>)
   (<P90298> ^category location
             ^dialog-object true
             ^property enemy
             ^visibility unknown-visible)
   (<S1009> ^2 <P90216>
            ^handle next-to1)
}


#   If the number of the blocks on a captured location is more than one then you can attack an occupied location that is next to the captured location.
sp {elaborate*state*sentence*if-the-number-of-the-blocks-on-a-captured-location-is-more-than-one-then-you-can-attack-an-occupied-location-that-is-next-to-the-captured-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1057>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the number of the blocks on a captured location is more than one then you can attack an occupied location that is next to the captured location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |number|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |blocks|
         ^next <w6>)
   (<w6> ^spelling |on|
         ^next <w7>)
   (<w7> ^spelling |a|
         ^next <w8>)
   (<w8> ^spelling |captured|
         ^next <w9>)
   (<w9> ^spelling |location|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |more|
         ^next <w12>)
   (<w12> ^spelling |than|
         ^next <w13>)
   (<w13> ^spelling |one|
         ^next <w14>)
   (<w14> ^spelling |then|
         ^next <w15>)
   (<w15> ^spelling |you|
         ^next <w16>)
   (<w16> ^spelling |can|
         ^next <w17>)
   (<w17> ^spelling |attack|
         ^next <w18>)
   (<w18> ^spelling |an|
         ^next <w19>)
   (<w19> ^spelling |occupied|
         ^next <w20>)
   (<w20> ^spelling |location|
         ^next <w21>)
   (<w21> ^spelling |that|
         ^next <w22>)
   (<w22> ^spelling |is|
         ^next <w23>)
   (<w23> ^spelling |next|
         ^next <w24>)
   (<w24> ^spelling |to|
         ^next <w25>)
   (<w25> ^spelling |the|
         ^next <w26>)
   (<w26> ^spelling |captured|
         ^next <w27>)
   (<w27> ^spelling |location|
         ^next <w28>)
   (<w28> ^spelling |.|
         ^next nil)
   (<S1057> ^if-subclause <S1321>
            ^message-type conditional
            ^then-subclause <S1697>)
   (<S1321> ^action <N10297>
            ^arg1 <S1322>
            ^predicate <S1393>)
   (<N10297> ^handle is1
             ^item-type action)
   (<S1322> ^2 <S1323>
            ^handle of1
            ^item-type predicate)
   (<S1323> ^2 <P90411>
            ^handle number1)
   (<P90411> #^handle new-object-id6
             ^item-type block
             ^predicates <P90412>
             ^predicates-copied true
             ^relation <S1294>)
   (<P90412> ^category block
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
   (<S1294> ^2 <P90328>
            ^handle on1)
   (<S1393> ^2 <R10982>
            ^handle more-than1
            ^item-type predicate)
   (<R10982> ^number 1)
   (<S1697> ^action <N10327>
            ^action-modifier <N10325>
            ^agent <N10323>
            ^arg1 <P90489>)
   (<N10327> ^handle attack
             ^item-type action
             ^procedural <E17>
             ^type action)
   (<E17> ^op_name initiate-attack)
   (<N10325> ^handle can)
   (<N10323> ^handle rosie
             ^property <P90131>)
   (<P90131> ^handle handle
              ^type visual)
   (<P90489> #^handle new-object-id7
             ^item-type location
             ^predicates <P90490>
             ^predicates-copied true
             ^relation <S1676>)
   (<P90490> ^category location
             ^dialog-object true
             ^property enemy
             ^visibility unknown-visible)
   (<S1676> ^2 <P90328>
            ^handle next-to1)
   (<P90328> #^handle new-object-id5
             ^item-type location
             ^predicates <P90329>
             ^predicates-copied true)
   (<P90329> ^category location
             ^dialog-object true
             ^property captured
             ^visibility unknown-visible)
}


#   If all locations are captured then you win.
sp {elaborate*state*sentence*if-all-locations-are-captured-then-you-win
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1724>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If all locations are captured then you win.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |all|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |are|
         ^next <w4>)
   (<w4> ^spelling |captured|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |you|
         ^next <w7>)
   (<w7> ^spelling |win|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S1724> ^if-subclause <S1846>
            ^message-type conditional
            ^then-subclause <S1963>)
   (<S1846> ^action <N10407>
            ^arg1 <P90502>
            ^arg1 <P90504>
            ^predicate <N10418>)
   (<N10407> ^handle is1
             ^item-type action)
   (<P90502> #^handle new-object-id8
             ^item-type location
             ^predicates <P90503>
             ^predicates-copied true)
   (<P90503> ^category location
             ^dialog-object true
             ^multiple true
             ^quantified <N10393>
             ^visibility unknown-visible)
   (<N10393> ^handle all)
   (<P90504> #^handle new-object-id9
             ^item-type all
             ^predicates <P90505>
             ^predicates-copied true)
   (<P90505> ^category all
             ^dialog-object true
             ^handle location
             ^multiple true
             ^quantified <N10393>
             ^visibility unknown-visible)
   (<N10418> ^handle captured
             ^item-type predicate
             ^property <C38>)
   (<C38> ^handle property
           ^type visual)
   (<S1963> ^action <N10426>
            ^agent <R10090>)
   (<N10426> ^handle win
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-win1)
   (<R10090> ^arm <A10140>
             ^handle rosie
             ^item-type object
             ^predicates <P90148>)
   (<A10140> ^action wait
             ^state internal)
   (<P90148> ^handle rosie)
}


#   If all locations are occupied then you lose.
sp {elaborate*state*sentence*if-all-locations-are-occupied-then-you-lose
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2007>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If all locations are occupied then you lose.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |all|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |are|
         ^next <w4>)
   (<w4> ^spelling |occupied|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |you|
         ^next <w7>)
   (<w7> ^spelling |lose|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S2007> ^if-subclause <S2129>
            ^message-type conditional
            ^then-subclause <S2262>)
   (<S2129> ^action <N10468>
            ^arg1 <P90532>
            ^arg1 <P90534>
            ^predicate <N10479>)
   (<N10468> ^handle is1
             ^item-type action)
   (<P90532> #^handle new-object-id10
             ^item-type location
             ^predicates <P90533>
             ^predicates-copied true)
   (<P90533> ^category location
             ^dialog-object true
             ^multiple true
             ^quantified <N10450>
             ^visibility unknown-visible)
   (<N10450> ^handle all)
   (<P90534> #^handle new-object-id11
             ^item-type all
             ^predicates <P90535>
             ^predicates-copied true)
   (<P90535> ^category all
             ^dialog-object true
             ^handle location
             ^multiple true
             ^quantified <N10450>
             ^visibility unknown-visible)
   (<N10479> ^handle occupied
             ^item-type predicate
             ^property <C38>)
   (<C38> ^handle property
           ^type visual)
   (<S2262> ^action <N10487>
            ^agent <R10090>)
   (<N10487> ^handle lose
             ^item-type action
             ^procedural <E13>
             ^type action)
   (<E13> ^op_name initiate-lose1)
   (<R10090> ^arm <A10140>
             ^handle rosie
             ^item-type object
             ^predicates <P90148>)
   (<A10140> ^action wait
             ^state internal)
   (<P90148> ^handle rosie)
}


#   The goal is that all locations are captured.
sp {elaborate*state*sentence*the-goal-is-that-all-locations-are-captured
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2306>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that all locations are captured.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |all|
         ^next <w5>)
   (<w5> ^spelling |locations|
         ^next <w6>)
   (<w6> ^spelling |are|
         ^next <w7>)
   (<w7> ^spelling |captured|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S2306> ^arg1 <N10513>
            ^message-type object-description
            ^subclause <S2380>)
   (<N10513> ^handle goal
             ^property <C62>)
   (<C62> ^handle concept
           ^type conceptual)
   (<S2380> ^action <N10561>
            ^arg1 <P90571>
            ^arg1 <P90569>
            ^predicate <N10572>)
   (<N10561> ^handle is1
             ^item-type action)
   (<P90571> #^handle new-object-id13
             ^item-type location
             ^predicates <P90572>
             ^predicates-copied true)
   (<P90572> ^category location
             ^dialog-object true
             ^multiple true
             ^quantified <N10535>
             ^visibility unknown-visible)
   (<N10535> ^handle all)
   (<P90569> #^handle new-object-id12
             ^item-type all
             ^predicates <P90570>
             ^predicates-copied true)
   (<P90570> ^category all
             ^dialog-object true
             ^handle location
             ^multiple true
             ^quantified <N10535>
             ^visibility unknown-visible)
   (<N10572> ^handle captured
             ^item-type predicate
             ^property <C38>)
   (<C38> ^handle property
           ^type visual)
}


