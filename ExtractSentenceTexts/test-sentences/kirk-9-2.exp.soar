#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Tue Sep 29 11:57:14 EDT 2015
#    from file 'kirk-9-2.exp.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 14
        ^failure-count 0
        ^success-count 0)
}


#   The current state is the initial state.
sp {elaborate*state*sentence*the-current-state-is-the-initial-state
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S137>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The current state is the initial state.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |current|
         ^next <w2>)
   (<w2> ^spelling |state|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |initial|
         ^next <w6>)
   (<w6> ^spelling |state|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S137> ^arg1 <R10131>
           ^message-type object-description
           ^predicate <N10067>
           ^predicate <N10064>)
   (<R10131> ^handle state1
             ^item-type object
             ^predicates <P90114>
             ^predicates-copied true
             ^property <P4000>
             ^visibility not-visible)
   (<P90114> ^category object
             ^dialog-object true
             ^property current)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<N10067> ^handle state1
             ^item-type object
             ^property <P4000>)
   (<N10064> ^handle initial
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
}


#   The current state is the final state.
sp {elaborate*state*sentence*the-current-state-is-the-final-state
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S314>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The current state is the final state.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |current|
         ^next <w2>)
   (<w2> ^spelling |state|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |final|
         ^next <w6>)
   (<w6> ^spelling |state|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S314> ^arg1 <R10131>
           ^message-type object-description
           ^predicate <N10105>
           ^predicate <N10108>)
   (<R10131> ^handle state1
             ^item-type object
             ^predicates <P90114>
             ^predicates-copied true
             ^property <P4000>
             ^visibility not-visible)
   (<P90114> ^category object
             ^dialog-object true
             ^property current)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<N10105> ^handle final
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<N10108> ^handle state1
             ^item-type object
             ^property <P4000>)
}


#   Attend to the red object.
sp {elaborate*state*sentence*attend-to-the-red-object
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S491>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Attend to the red object.|)
   (<w0> ^spelling |attend|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |object|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S491> ^action <N10121>
           ^arg1 <O8030>
           ^message-type command)
   (<N10121> ^handle attend
             ^item-type action
             ^procedural <E9>
             ^type action)
   (<E9> ^op_name initiate-attend1)
   (<O8030> ^handle small-red-triangle1
            ^item-type object
            ^predicates <P90072>)
   (<P90072> ^arm-status not-grabbed
             ^category block
             ^color red1
             ^movable true
             ^shape triangle1
             ^size small1)
}


#   Ignore the relation that is named below.
sp {elaborate*state*sentence*ignore-the-relation-that-is-named-below
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S613>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Ignore the relation that is named below.|)
   (<w0> ^spelling |ignore|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |relation|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |is|
         ^next <w5>)
   (<w5> ^spelling |named|
         ^next <w6>)
   (<w6> ^spelling |below|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S613> ^action <N10144>
           ^arg1 <N10153>
           ^message-type command)
   (<N10144> ^handle ignore
             ^item-type action
             ^procedural <E10>
             ^type action)
   (<E10> ^op_name initiate-ignore1)
   (<N10153> ^handle relation
             ^property <C27>
             ^relation <S743>)
   (<C27> ^handle concept
           ^type conceptual)
}


#   Ignore the relation named below.
sp {elaborate*state*sentence*ignore-the-relation-named-below
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S770>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Ignore the relation named below.|)
   (<w0> ^spelling |ignore|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |relation|
         ^next <w3>)
   (<w3> ^spelling |named|
         ^next <w4>)
   (<w4> ^spelling |below|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S770> ^action <N10178>
           ^arg1 <N10187>
           ^message-type command)
   (<N10178> ^handle ignore
             ^item-type action
             ^procedural <E10>
             ^type action)
   (<E10> ^op_name initiate-ignore1)
   (<N10187> ^handle relation
             ^property <C27>
             ^relation <S870>)
   (<C27> ^handle concept
           ^type conceptual)
}


#   Attend to the relation that is named below.
sp {elaborate*state*sentence*attend-to-the-relation-that-is-named-below
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S897>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Attend to the relation that is named below.|)
   (<w0> ^spelling |attend|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |relation|
         ^next <w4>)
   (<w4> ^spelling |that|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |named|
         ^next <w7>)
   (<w7> ^spelling |below|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S897> ^action <N10206>
           ^arg1 <N10215>
           ^message-type command)
   (<N10206> ^handle attend
             ^item-type action
             ^procedural <E9>
             ^type action)
   (<E9> ^op_name initiate-attend1)
   (<N10215> ^handle relation
             ^property <C27>
             ^relation <S1036>)
   (<C27> ^handle concept
           ^type conceptual)
}


#   Attend to the relation named below.
sp {elaborate*state*sentence*attend-to-the-relation-named-below
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1063>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Attend to the relation named below.|)
   (<w0> ^spelling |attend|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |relation|
         ^next <w4>)
   (<w4> ^spelling |named|
         ^next <w5>)
   (<w5> ^spelling |below|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S1063> ^action <N10244>
            ^arg1 <N10253>
            ^message-type command)
   (<N10244> ^handle attend
             ^item-type action
             ^procedural <E9>
             ^type action)
   (<E9> ^op_name initiate-attend1)
   (<N10253> ^handle relation
             ^property <C27>
             ^relation <S1172>)
   (<C27> ^handle concept
           ^type conceptual)
}


#   You can move a free red block onto a clear location.
sp {elaborate*state*sentence*you-can-move-a-free-red-block-onto-a-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1199>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |You can move a free red block onto a clear location.|)
   (<w0> ^spelling |you|
         ^next <w1>)
   (<w1> ^spelling |can|
         ^next <w2>)
   (<w2> ^spelling |move|
         ^next <w3>)
   (<w3> ^spelling |a|
         ^next <w4>)
   (<w4> ^spelling |free|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |block|
         ^next <w7>)
   (<w7> ^spelling |onto|
         ^next <w8>)
   (<w8> ^spelling |a|
         ^next <w9>)
   (<w9> ^spelling |clear|
         ^next <w10>)
   (<w10> ^spelling |location|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S1199> ^action <N10271>
            ^action-modifier <N10269>
            ^agent <R10047>
            ^arg1 <P90287>
            ^arg2 <S1430>
            ^message-type command)
   (<N10271> ^handle move1
             ^item-type action)
   (<N10269> ^handle can)
   (<R10047> ^arm <A10082>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10082> ^action wait)
   (<P90068> ^handle rosie)
   (<P90287> #^handle new-object-id1
             ^item-type block
             ^predicates <P90288>
             ^predicates-copied true)
   (<P90288> ^category block
             ^color red1
             ^dialog-object true
             ^property free)
   (<S1430> ^2 <P90297>
            ^handle on1
            ^item-type predicate)
   (<P90297> #^handle new-object-id2
             ^item-type location
             ^predicates <P90298>
             ^predicates-copied true)
   (<P90298> ^category location
             ^dialog-object true
             ^property clear)
}


#   If all the green blocks are on their locations then you can move a red block onto a clear location.
sp {elaborate*state*sentence*if-all-the-green-blocks-are-on-their-locations-then-you-can-move-a-red-block-onto-a-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1470>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If all the green blocks are on their locations then you can move a red block onto a clear location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |all|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |green|
         ^next <w4>)
   (<w4> ^spelling |blocks|
         ^next <w5>)
   (<w5> ^spelling |are|
         ^next <w6>)
   (<w6> ^spelling |on|
         ^next <w7>)
   (<w7> ^spelling |their|
         ^next <w8>)
   (<w8> ^spelling |locations|
         ^next <w9>)
   (<w9> ^spelling |then|
         ^next <w10>)
   (<w10> ^spelling |you|
         ^next <w11>)
   (<w11> ^spelling |can|
         ^next <w12>)
   (<w12> ^spelling |move|
         ^next <w13>)
   (<w13> ^spelling |a|
         ^next <w14>)
   (<w14> ^spelling |red|
         ^next <w15>)
   (<w15> ^spelling |block|
         ^next <w16>)
   (<w16> ^spelling |onto|
         ^next <w17>)
   (<w17> ^spelling |a|
         ^next <w18>)
   (<w18> ^spelling |clear|
         ^next <w19>)
   (<w19> ^spelling |location|
         ^next <w20>)
   (<w20> ^spelling |.|
         ^next nil)
   (<S1470> ^if-subclause <S1630>
            ^message-type conditional
            ^then-subclause <S1986>)
   (<S1630> ^arg1 <P90309>
            ^predicate <S1704>)
   (<P90309> #^handle new-object-id3
             ^item-type block
             ^predicates <P90310>
             ^predicates-copied true)
   (<P90310> ^category block
             ^color green1
             ^dialog-object true
             ^handle all
             ^multiple true
             ^quantified <N10326>)
   (<N10326> ^handle all)
   (<S1704> ^2 <P90326>
            ^handle on1
            ^item-type predicate)
   (<P90326> #^handle new-object-id4
             ^item-type location
             ^possessive true
             ^predicates <P90327>
             ^predicates-copied true)
   (<P90327> ^category location
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
   (<S1986> ^action <N10374>
            ^action-modifier <N10372>
            ^agent <R10047>
            ^arg1 <P90346>
            ^arg2 <S1969>)
   (<N10374> ^handle move1
             ^item-type action)
   (<N10372> ^handle can)
   (<R10047> ^arm <A10082>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10082> ^action wait)
   (<P90068> ^handle rosie)
   (<P90346> #^handle new-object-id5
             ^item-type block
             ^predicates <P90347>
             ^predicates-copied true)
   (<P90347> ^category block
             ^color red1
             ^dialog-object true)
   (<S1969> ^2 <P90356>
            ^handle on1
            ^item-type predicate)
   (<P90356> #^handle new-object-id6
             ^item-type location
             ^predicates <P90357>
             ^predicates-copied true)
   (<P90357> ^category location
             ^dialog-object true
             ^property clear)
}


#   Ignore the relation named below.
sp {elaborate*state*sentence*ignore-below10
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Ignore below.|)
   (<w0> ^spelling |ignore|
         ^next <w4>)
   (<w4> ^spelling |below|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
}

#   The game is called tictactoe.
sp {elaborate*state*sentence*the-game-is-called-tictactoe
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The game is called tictactoe.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |game|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |called|
         ^next <w35>)
   (<w35> ^spelling |tictactoe|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
}

#   The puzzle is called tictactoe.
sp {elaborate*state*sentence*the-puzzle-is-called-tower-of-hanoi
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The puzzle is called tower-of-hanoi.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |puzzle|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |called|
         ^next <w35>)
   (<w35> ^spelling |tower-of-hanoi|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
}


#   The game is tictactoe.
sp {elaborate*state*sentence*the-game-is-tictactoe13
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2414>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The game is tic-tac-toe.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |game|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |tictactoe|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S2414> ^arg1 <G2>
            ^message-type object-description
            ^predicate <R11704>)
   (<G2> ^handle game1
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<R11704> #^handle tictactoe7
              ^item-type predicate
              ^word-structure <N10450>)
   (<N10450> ^referent <R11704>
              ^spelling tictactoe)
}


#   The goal is three-in-a-row
sp {elaborate*state*sentence*the-goal-is-three-in-a-row14
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2414>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is three-in-a-row.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |game|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |tictactoe|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S2414> ^arg1 <G2>
            ^message-type object-description
            ^predicate <R11704>)
   (<G2> ^handle game1
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<R11704> #^handle tictactoe7
              ^item-type predicate
              ^word-structure <N10450>)
   (<N10450> ^referent <R11704>
              ^spelling tictactoe)
}