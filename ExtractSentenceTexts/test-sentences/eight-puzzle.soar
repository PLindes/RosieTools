#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Fri Sep 04 09:41:29 EDT 2015
#    from file 'eight-puzzle.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 10
        ^failure-count 0
        ^success-count 0)
}


sp {elaborate*state*sentence*the-name-of-the-game-is-eight-puzzle
    :interrupt
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
  -{(<ss> ^operator <o> +)
    (<o> ^name satisfy-purpose)}
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is eight-puzzle.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |eight-puzzle|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-name-of-an-action-is-slide
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2 ^csn 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is slide.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |slide|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-a-location-is-next-to-a-clear-location-but-it-is-not-diagonal-with-the-clear-location-then-it-is-adjacent-to-the-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is next to a clear location but it is not diagonal with the clear location then it is adjacent to the clear location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |next|
         ^next <w5>)
   (<w5> ^spelling |to|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |clear|
         ^next <w8>)
   (<w8> ^spelling |location|
         ^next <w9>)
   (<w9> ^spelling |but|
         ^next <w10>)
   (<w10> ^spelling |it|
         ^next <w11>)
   (<w11> ^spelling |is|
         ^next <w12>)
   (<w12> ^spelling |not|
         ^next <w13>)
   (<w13> ^spelling |diagonal|
         ^next <w14>)
   (<w14> ^spelling |with|
         ^next <w15>)
   (<w15> ^spelling |the|
         ^next <w16>)
   (<w16> ^spelling |clear|
         ^next <w17>)
   (<w17> ^spelling |location|
         ^next <w18>)
   (<w18> ^spelling |then|
         ^next <w19>)
   (<w19> ^spelling |it|
         ^next <w20>)
   (<w20> ^spelling |is|
         ^next <w21>)
   (<w21> ^spelling |adjacent|
         ^next <w22>)
   (<w22> ^spelling |to|
         ^next <w23>)
   (<w23> ^spelling |the|
         ^next <w24>)
   (<w24> ^spelling |clear|
         ^next <w25>)
   (<w25> ^spelling |location|
         ^next <w26>)
   (<w26> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-a-block-is-on-a-location-that-is-adjacent-to-a-clear-location-then-you-can-move-the-block-onto-the-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a block is on a location that is adjacent to a clear location then you can move the block onto the clear location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |block|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |a|
         ^next <w6>)
   (<w6> ^spelling |location|
         ^next <w7>)
   (<w7> ^spelling |that|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |adjacent|
         ^next <w10>)
   (<w10> ^spelling |to|
         ^next <w11>)
   (<w11> ^spelling |a|
         ^next <w12>)
   (<w12> ^spelling |clear|
         ^next <w13>)
   (<w13> ^spelling |location|
         ^next <w14>)
   (<w14> ^spelling |then|
         ^next <w15>)
   (<w15> ^spelling |you|
         ^next <w16>)
   (<w16> ^spelling |can|
         ^next <w17>)
   (<w17> ^spelling |move|
         ^next <w18>)
   (<w18> ^spelling |the|
         ^next <w19>)
   (<w19> ^spelling |block|
         ^next <w20>)
   (<w20> ^spelling |onto|
         ^next <w21>)
   (<w21> ^spelling |the|
         ^next <w22>)
   (<w22> ^spelling |clear|
         ^next <w23>)
   (<w23> ^spelling |location|
         ^next <w24>)
   (<w24> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-the-color-of-a-location-is-equal-to-the-color-of-the-block-that-is-on-the-location-then-the-color-is-matched
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the color of a location is equal to the color of the block that is on the location then the color is matched.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |color|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |location|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |equal|
         ^next <w8>)
   (<w8> ^spelling |to|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |color|
         ^next <w11>)
   (<w11> ^spelling |of|
         ^next <w12>)
   (<w12> ^spelling |the|
         ^next <w13>)
   (<w13> ^spelling |block|
         ^next <w14>)
   (<w14> ^spelling |that|
         ^next <w15>)
   (<w15> ^spelling |is|
         ^next <w16>)
   (<w16> ^spelling |on|
         ^next <w17>)
   (<w17> ^spelling |the|
         ^next <w18>)
   (<w18> ^spelling |location|
         ^next <w19>)
   (<w19> ^spelling |then|
         ^next <w20>)
   (<w20> ^spelling |the|
         ^next <w21>)
   (<w21> ^spelling |color|
         ^next <w22>)
   (<w22> ^spelling |is|
         ^next <w23>)
   (<w23> ^spelling |matched|
         ^next <w24>)
   (<w24> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-the-color-of-a-location-is-equal-to-the-color-of-the-block-that-is-on-the-location-then-the-location-is-matched
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the color of a location is equal to the color of the block that is on the location then the location is matched.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |color|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |location|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |equal|
         ^next <w8>)
   (<w8> ^spelling |to|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |color|
         ^next <w11>)
   (<w11> ^spelling |of|
         ^next <w12>)
   (<w12> ^spelling |the|
         ^next <w13>)
   (<w13> ^spelling |block|
         ^next <w14>)
   (<w14> ^spelling |that|
         ^next <w15>)
   (<w15> ^spelling |is|
         ^next <w16>)
   (<w16> ^spelling |on|
         ^next <w17>)
   (<w17> ^spelling |the|
         ^next <w18>)
   (<w18> ^spelling |location|
         ^next <w19>)
   (<w19> ^spelling |then|
         ^next <w20>)
   (<w20> ^spelling |the|
         ^next <w21>)
   (<w21> ^spelling |location|
         ^next <w22>)
   (<w22> ^spelling |is|
         ^next <w23>)
   (<w23> ^spelling |matched|
         ^next <w24>)
   (<w24> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-the-color-of-a-location-is-the-color-of-the-block-that-is-on-the-location-then-the-location-is-matched
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the color of a location is the color of the block that is on the location then the location is matched.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |color|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |location|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |the|
         ^next <w8>)
   (<w8> ^spelling |color|
         ^next <w9>)
   (<w9> ^spelling |of|
         ^next <w10>)
   (<w10> ^spelling |the|
         ^next <w11>)
   (<w11> ^spelling |block|
#         ^next <w12>)
#   (<w12> ^spelling |that|
#         ^next <w13>)
#   (<w13> ^spelling |is|
#         ^next <w14>)
#   (<w14> ^spelling |on|
#         ^next <w15>)
#   (<w15> ^spelling |the|
#         ^next <w16>)
#   (<w16> ^spelling |location|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |the|
         ^next <w19>)
   (<w19> ^spelling |location|
         ^next <w20>)
   (<w20> ^spelling |is|
         ^next <w21>)
   (<w21> ^spelling |matched|
         ^next <w22>)
   (<w22> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-there-are-eight-matched-locations
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that there are eight matched locations.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |there|
         ^next <w5>)
   (<w5> ^spelling |are|
         ^next <w6>)
   (<w6> ^spelling |eight|
         ^next <w7>)
   (<w7> ^spelling |matched|
         ^next <w8>)
   (<w8> ^spelling |locations|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-eight-locations-are-matched
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that eight locations are matched.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |eight|
         ^next <w5>)
   (<w5> ^spelling |locations|
         ^next <w6>)
   (<w6> ^spelling |are|
         ^next <w7>)
   (<w7> ^spelling |matched|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-the-number-of-the-matched-locations-is-eight
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the number of the matched locations is eight.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |number|
         ^next <w6>)
   (<w6> ^spelling |of|
         ^next <w71>)
   (<w71> ^spelling |the|
         ^next <w7>)
   (<w7> ^spelling |matched|
         ^next <w8>)
   (<w8> ^spelling |locations|
         ^next <w9>)
   (<w9> ^spelling |is|
         ^next <w10>)
   (<w10> ^spelling |eight|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
}


