#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Mon Oct 05 12:41:41 EDT 2015
#    from file 'heuristics.exp.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 15
        ^failure-count 0
        ^success-count 0)
}


#   Prefer playing a card that is not a wild card.
sp {elaborate*state*sentence*prefer-playing-a-card-that-is-not-a-wild-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S136>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer playing a card that is not a wild card.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |card|
         ^next <w4>)
   (<w4> ^spelling |that|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |not|
         ^next <w7>)
   (<w7> ^spelling |a|
         ^next <w8>)
   (<w8> ^spelling |wild|
         ^next <w9>)
   (<w9> ^spelling |card|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S136> ^action <N10034>
           ^message-type command
           ^subclause1 <S167>)
   (<N10034> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S167> ^action <N10038>
           ^arg1 <P90119>)
   (<N10038> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90119> #^heading new-object-id1
             ^item-type card
             ^predicates <P90120>
             ^predicates-copied true)
   (<P90120> ^category card
             ^dialog-object true
             ^handle negation
             ^handle wild
             ^name wild
             ^visibility unknown-visible)
}


#   Prefer playing a card that is not wild.
sp {elaborate*state*sentence*prefer-playing-a-card-that-is-not-wild
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S347>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer playing a card that is not wild.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |card|
         ^next <w4>)
   (<w4> ^spelling |that|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |not|
         ^next <w7>)
   (<w7> ^spelling |wild|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S347> ^action <N10084>
           ^message-type command
           ^subclause1 <S378>)
   (<N10084> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S378> ^action <N10088>
           ^arg1 <P90141>)
   (<N10088> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90141> #^heading new-object-id2
             ^item-type card
             ^predicates <P90142>
             ^predicates-copied true)
   (<P90142> ^category card
             ^dialog-object true
             ^handle negation
             ^handle wild
             ^name wild
             ^visibility unknown-visible)
}


#   Avoid playing a wild card.
sp {elaborate*state*sentence*avoid-playing-a-wild-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S524>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Avoid playing a wild card.|)
   (<w0> ^spelling |avoid|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |wild|
         ^next <w4>)
   (<w4> ^spelling |card|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S524> ^action <N10125>
           ^message-type command
           ^subclause <S555>)
   (<N10125> ^handle avoid
             ^item-type action
             ^procedural <E16>
             ^type action)
   (<E16> ^op_name initiate-avoid1)
   (<S555> ^action <N10129>
           ^arg1 <P90159>)
   (<N10129> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90159> #^heading new-object-id3
             ^item-type card
             ^predicates <P90160>
             ^predicates-copied true)
   (<P90160> ^category card
             ^dialog-object true
             ^handle wild
             ^name wild
             ^visibility unknown-visible)
}


#   Prefer playing a wild card over playing another card.
sp {elaborate*state*sentence*prefer-playing-a-wild-card-over-playing-another-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S654>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer playing a wild card over playing another card.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |wild|
         ^next <w4>)
   (<w4> ^spelling |card|
         ^next <w5>)
   (<w5> ^spelling |over|
         ^next <w6>)
   (<w6> ^spelling |playing|
         ^next <w7>)
   (<w7> ^spelling |another|
         ^next <w8>)
   (<w8> ^spelling |card|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S654> ^action <N10153>
           ^message-type command
           ^subclause1 <S685>
           ^subclause2 <S774>)
   (<N10153> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S685> ^action <N10157>
           ^arg1 <P90178>)
   (<N10157> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90178> #^heading new-object-id4
             ^item-type card
             ^predicates <P90179>
             ^predicates-copied true)
   (<P90179> ^category card
             ^dialog-object true
             ^handle wild
             ^name wild
             ^visibility unknown-visible)
   (<S774> ^action <N10178>
           ^arg1 <P90190>)
   (<N10178> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<P90190> #^heading new-object-id5
             ^item-type card
             ^predicates <P90191>
             ^predicates-copied true
             ^specifier distinct)
   (<P90191> ^category card
             ^dialog-object true
             ^visibility unknown-visible)
}


#   If a card is not wild then prefer playing it.
sp {elaborate*state*sentence*if-a-card-is-not-wild-then-prefer-playing-it
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S856>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a card is not wild then prefer playing it.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |card|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |not|
         ^next <w5>)
   (<w5> ^spelling |wild|
         ^next <w6>)
   (<w6> ^spelling |then|
         ^next <w7>)
   (<w7> ^spelling |prefer|
         ^next <w8>)
   (<w8> ^spelling |playing|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S856> ^if-subclause <S966>
           ^message-type conditional
           ^then-subclause <S1130>)
   (<S966> ^arg1 <P90200>
           ^modifier <N10223>
           ^predicate <N10226>)
   (<P90200> #^heading new-object-id6
             ^item-type card
             ^predicates <P90201>
             ^predicates-copied true)
   (<P90201> ^category card
             ^dialog-object true
             ^visibility unknown-visible)
   (<N10223> ^handle negation)
   (<N10226> ^handle wild
             ^item-type predicate
             ^property <P4000>)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S1130> ^action <N10232>
            ^subclause1 <S1075>)
   (<N10232> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S1075> ^action <N10237>
            ^arg1 <P90200>)
   (<N10237> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
}


#   If a card is wild then avoid playing it.
sp {elaborate*state*sentence*if-a-card-is-wild-then-avoid-playing-it
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1157>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a card is wild then avoid playing it.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |card|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |wild|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |avoid|
         ^next <w7>)
   (<w7> ^spelling |playing|
         ^next <w8>)
   (<w8> ^spelling |it|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S1157> ^if-subclause <S1267>
            ^message-type conditional
            ^then-subclause <S1414>)
   (<S1267> ^arg1 <P90228>
            ^predicate <N10276>)
   (<P90228> #^heading new-object-id7
             ^item-type card
             ^predicates <P90229>
             ^predicates-copied true)
   (<P90229> ^category card
             ^dialog-object true
             ^visibility unknown-visible)
   (<N10276> ^handle wild
             ^item-type predicate
             ^property <P4000>)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S1414> ^action <N10282>
            ^subclause <S1359>)
   (<N10282> ^handle avoid
             ^item-type action
             ^procedural <E16>
             ^type action)
   (<E16> ^op_name initiate-avoid1)
   (<S1359> ^action <N10287>
            ^arg1 <P90228>)
   (<N10287> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
}


#   If the value of a card is less than the value of another card and the card is not a wild card then prefer playing it.
sp {elaborate*state*sentence*if-the-value-of-a-card-is-less-than-the-value-of-another-card-and-the-card-is-not-a-wild-card-then-prefer-playing-it
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1441>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the value of a card is less than the value of another card and the card is not a wild card then prefer playing it.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |value|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |card|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |less|
         ^next <w8>)
   (<w8> ^spelling |than|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |value|
         ^next <w11>)
   (<w11> ^spelling |of|
         ^next <w12>)
   (<w12> ^spelling |another|
         ^next <w13>)
   (<w13> ^spelling |card|
         ^next <w14>)
   (<w14> ^spelling |and|
         ^next <w15>)
   (<w15> ^spelling |the|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |is|
         ^next <w18>)
   (<w18> ^spelling |not|
         ^next <w19>)
   (<w19> ^spelling |a|
         ^next <w20>)
   (<w20> ^spelling |wild|
         ^next <w21>)
   (<w21> ^spelling |card|
         ^next <w22>)
   (<w22> ^spelling |then|
         ^next <w23>)
   (<w23> ^spelling |prefer|
         ^next <w24>)
   (<w24> ^spelling |playing|
         ^next <w25>)
   (<w25> ^spelling |it|
         ^next <w26>)
   (<w26> ^spelling |.|
         ^next nil)
   (<S1441> ^if-subclause <S1754>
            ^message-type conditional
            ^then-subclause <S2060>)
   (<S1754> ^subclause <S1862>
            ^subclause <S1604>)
   (<S1862> ^arg1 <P90261>
            ^modifier <N10391>
            ^predicate <N10399>
            ^predicate <N10402>)
   (<P90261> #^heading new-object-id8
             ^item-type card
             ^predicates <P90262>
             ^predicates-copied true)
   (<P90262> ^category card
             ^dialog-object true
             ^visibility unknown-visible)
   (<N10391> ^handle negation)
   (<N10399> ^handle wild
             ^item-type predicate
             ^property <P4000>)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<N10402> ^handle card
             ^item-type predicate
             ^property <P7000>)
   (<P7000> ^handle category
             ^item-type property
             ^type visual)
   (<S1604> ^arg1 <S1605>
            ^predicate <S1741>)
   (<S1605> ^2 <S1606>
            ^handle of1
            ^item-type predicate)
   (<S1606> ^2 <P90261>
            ^handle value)
   (<S1741> ^2 <N10345>
            ^handle less-than1
            ^item-type predicate)
   (<N10345> ^handle value
             ^property <C31>
             ^relation <S1739>)
   (<C31> ^handle concept
           ^type conceptual)
   (<S1739> ^2 <P90290>
            ^handle of1)
   (<P90290> #^heading new-object-id9
             ^item-type card
             ^predicates <P90291>
             ^predicates-copied true
             ^specifier distinct)
   (<S2060> ^action <N10410>
            ^subclause1 <S2005>)
   (<N10410> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S2005> ^action <N10415>
            ^arg1 <P90261>)
   (<N10415> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
}


#   Prefer playing a card that is not a clear card.
sp {elaborate*state*sentence*prefer-playing-a-card-that-is-not-a-clear-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2087>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer playing a card that is not a clear card.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |card|
         ^next <w4>)
   (<w4> ^spelling |that|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |not|
         ^next <w7>)
   (<w7> ^spelling |a|
         ^next <w8>)
   (<w8> ^spelling |clear|
         ^next <w9>)
   (<w9> ^spelling |card|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S2087> ^action <N10430>
            ^message-type command
            ^subclause1 <S2118>)
   (<N10430> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S2118> ^action <N10434>
            ^arg1 <P90386>)
   (<N10434> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90386> #^heading new-object-id10
             ^item-type card
             ^predicates <P90387>
             ^predicates-copied true)
   (<P90387> ^category card
             ^dialog-object true
             ^handle negation
             ^property clear
             ^visibility unknown-visible)
}


#   Avoid playing a clear card.
sp {elaborate*state*sentence*avoid-playing-a-clear-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2298>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Avoid playing a clear card.|)
   (<w0> ^spelling |avoid|
         ^next <w1>)
   (<w1> ^spelling |playing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |clear|
         ^next <w4>)
   (<w4> ^spelling |card|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S2298> ^action <N10480>
            ^message-type command
            ^subclause <S2329>)
   (<N10480> ^handle avoid
             ^item-type action
             ^procedural <E16>
             ^type action)
   (<E16> ^op_name initiate-avoid1)
   (<S2329> ^action <N10484>
            ^arg1 <P90404>)
   (<N10484> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90404> #^heading new-object-id11
             ^item-type card
             ^predicates <P90405>
             ^predicates-copied true)
   (<P90405> ^category card
             ^dialog-object true
             ^property clear
             ^visibility unknown-visible)
}


#   Prefer placing a tile on the center location.
sp {elaborate*state*sentence*prefer-placing-a-tile-on-the-center-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2428>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer placing a tile on the center location.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |placing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |tile|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |center|
         ^next <w7>)
   (<w7> ^spelling |location|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S2428> ^action <N10508>
            ^message-type command
            ^subclause1 <S2459>)
   (<N10508> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S2459> ^action <N10512>
            ^arg1 <P90470>
            ^arg2 <S2598>)
   (<N10512> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90470> #^heading new-object-id13
             ^item-type tile
             ^predicates <P90471>
             ^predicates-copied true)
   (<P90471> ^category tile
             ^dialog-object true
             ^visibility unknown-visible)
   (<S2598> ^2 <P90457>
            ^handle on1
            ^item-type predicate)
   (<P90457> #^heading new-object-id12
             ^item-type location
             ^predicates <P90458>
             ^predicates-copied true)
   (<P90458> ^category location
             ^dialog-object true
             ^property center
             ^visibility not-visible)
}


#   Prefer placing a tile on a corner location over placing a tile on an edge location.
sp {elaborate*state*sentence*prefer-placing-a-tile-on-a-corner-location-over-placing-a-tile-on-an-edge-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2629>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Prefer placing a tile on a corner location over placing a tile on an edge location.|)
   (<w0> ^spelling |prefer|
         ^next <w1>)
   (<w1> ^spelling |placing|
         ^next <w2>)
   (<w2> ^spelling |a|
         ^next <w3>)
   (<w3> ^spelling |tile|
         ^next <w4>)
   (<w4> ^spelling |on|
         ^next <w5>)
   (<w5> ^spelling |a|
         ^next <w6>)
   (<w6> ^spelling |corner|
         ^next <w7>)
   (<w7> ^spelling |location|
         ^next <w8>)
   (<w8> ^spelling |over|
         ^next <w9>)
   (<w9> ^spelling |placing|
         ^next <w10>)
   (<w10> ^spelling |a|
         ^next <w11>)
   (<w11> ^spelling |tile|
         ^next <w12>)
   (<w12> ^spelling |on|
         ^next <w13>)
   (<w13> ^spelling |an|
         ^next <w14>)
   (<w14> ^spelling |edge|
         ^next <w15>)
   (<w15> ^spelling |location|
         ^next <w16>)
   (<w16> ^spelling |.|
         ^next nil)
   (<S2629> ^action <N10553>
            ^message-type command
            ^subclause1 <S2660>
            ^subclause2 <S2820>)
   (<N10553> ^handle prefer
             ^item-type action
             ^procedural <E15>
             ^type action)
   (<E15> ^op_name initiate-prefer1)
   (<S2660> ^action <N10557>
            ^arg1 <P90509>
            ^arg2 <S2799>)
   (<N10557> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<P90509> #^heading new-object-id15
             ^item-type tile
             ^predicates <P90510>
             ^predicates-copied true)
   (<P90510> ^category tile
             ^dialog-object true
             ^visibility unknown-visible)
   (<S2799> ^2 <P90496>
            ^handle on1
            ^item-type predicate)
   (<P90496> #^heading new-object-id14
             ^item-type location
             ^predicates <P90497>
             ^predicates-copied true)
   (<P90497> ^category location
             ^dialog-object true
             ^property corner
             ^visibility unknown-visible)
   (<S2820> ^action <N10595>
            ^arg1 <P90543>
            ^arg2 <S2959>)
   (<N10595> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<P90543> #^heading new-object-id17
             ^item-type tile
             ^predicates <P90544>
             ^predicates-copied true)
   (<P90544> ^category tile
             ^dialog-object true
             ^visibility unknown-visible)
   (<S2959> ^2 <P90530>
            ^handle on1
            ^item-type predicate)
   (<P90530> #^heading new-object-id16
             ^item-type location
             ^predicates <P90531>
             ^predicates-copied true)
   (<P90531> ^category location
             ^dialog-object true
             ^property edge
             ^visibility unknown-visible)
}


#   The center location is diagonal with four locations.
sp {elaborate*state*sentence*the-center-location-is-diagonal-with-four-locations
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2990>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The center location is diagonal with four locations.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |center|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |diagonal|
         ^next <w5>)
   (<w5> ^spelling |with|
         ^next <w6>)
   (<w6> ^spelling |four|
         ^next <w7>)
   (<w7> ^spelling |locations|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S2990> ^arg1 <P90457>
            ^message-type object-description
            ^predicate <S3159>)
   (<P90457> #^heading new-object-id12
             ^item-type location
             ^predicates <P90458>
             ^predicates-copied true)
   (<P90458> ^category location
             ^dialog-object true
             ^property center
             ^visibility not-visible)
   (<S3159> ^2 <P90638>
            ^handle diagonal-with1
            ^item-type predicate)
   (<P90638> #^heading new-object-id18
             ^item-type location
             ^predicates <P90639>
             ^predicates-copied true)
   (<P90639> ^category location
             ^dialog-object true
             ^multiple true
             ^number 4
             ^visibility not-visible)
}


#   A corner location is diagonal with one location.
sp {elaborate*state*sentence*a-corner-location-is-diagonal-with-one-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3182>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |A corner location is diagonal with one location.|)
   (<w0> ^spelling |a|
         ^next <w1>)
   (<w1> ^spelling |corner|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |diagonal|
         ^next <w5>)
   (<w5> ^spelling |with|
         ^next <w6>)
   (<w6> ^spelling |one|
         ^next <w7>)
   (<w7> ^spelling |location|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S3182> ^arg1 <P90650>
            ^message-type object-description
            ^predicate <S3351>)
   (<P90650> #^heading new-object-id19
             ^item-type location
             ^predicates <P90651>
             ^predicates-copied true)
   (<P90651> ^category location
             ^dialog-object true
             ^property corner
             ^visibility unknown-visible)
   (<S3351> ^2 <L28>
            ^handle diagonal-with1
            ^item-type predicate)
   (<L28> ^item-type location
          ^predicates <P90086>)
   (<P90086> ^category location 
             ^dialog-object true 
             ^number 1
             ^visibility unknown-visible)
}


#   An edge location is not diagonal with any location.
sp {elaborate*state*sentence*an-edge-location-is-not-diagonal-with-any-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3374>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |An edge location is not diagonal with any location.|)
   (<w0> ^spelling |an|
         ^next <w1>)
   (<w1> ^spelling |edge|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |not|
         ^next <w5>)
   (<w5> ^spelling |diagonal|
         ^next <w6>)
   (<w6> ^spelling |with|
         ^next <w7>)
   (<w7> ^spelling |any|
         ^next <w8>)
   (<w8> ^spelling |location|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3374> ^arg1 <P90713>
            ^message-type object-description
            ^modifier <N10752>
            ^predicate <S3560>)
   (<P90713> #^heading new-object-id20
             ^item-type location
             ^predicates <P90714>
             ^predicates-copied true)
   (<P90714> ^category location
             ^dialog-object true
             ^property edge
             ^visibility unknown-visible)
   (<N10752> ^handle negation)
   (<S3560> ^2 <P90730>
            ^handle diagonal-with1
            ^item-type predicate)
   (<P90730> #^heading new-object-id21
             ^item-type location
             ^predicates <P90731>
             ^predicates-copied true)
   (<P90731> ^category location
             ^dialog-object true
             ^visibility unknown-visible)
}


#   An edge location is diagonal with no locations.
sp {elaborate*state*sentence*an-edge-location-is-diagonal-with-no-locations
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 15)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3583>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |An edge location is diagonal with no locations.|)
   (<w0> ^spelling |an|
         ^next <w1>)
   (<w1> ^spelling |edge|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |diagonal|
         ^next <w5>)
   (<w5> ^spelling |with|
         ^next <w6>)
   (<w6> ^spelling |no|
         ^next <w7>)
   (<w7> ^spelling |locations|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S3583> ^arg1 <P90742>
            ^message-type object-description
            ^predicate <S3752>)
   (<P90742> #^heading new-object-id22
             ^item-type location
             ^predicates <P90743>
             ^predicates-copied true)
   (<P90743> ^category location
             ^dialog-object true
             ^property edge
             ^visibility unknown-visible)
   (<S3752> ^2 <P90798>
            ^handle diagonal-with1
            ^item-type predicate)
   (<P90798> #^heading new-object-id23
             ^item-type location
             ^predicates <P90799>
             ^predicates-copied true)
   (<P90799> ^category location
             ^dialog-object true
             ^multiple true
             ^number 0
             ^visibility not-visible)
}


sp {elaborate*state*sentence*if-the-center-location-is-clear-then-prefer-placing-a-tile-on-the-center-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 16)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the center location is clear then prefer placing a tile on the center location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |center|
         ^next <w3>)
   (<w3> ^spelling |location|
         ^next <w4>)
   (<w4> ^spelling |is|
         ^next <w5>)
   (<w5> ^spelling |clear|
         ^next <w6>)
   (<w6> ^spelling |then|
         ^next <w7>)
   (<w7> ^spelling |prefer|
         ^next <w8>)
   (<w8> ^spelling |placing|
         ^next <w9>)
   (<w9> ^spelling |a|
         ^next <w10>)
   (<w10> ^spelling |tile|
#         ^next <w11>)
#   (<w11> ^spelling |on|
#         ^next <w12>)
#   (<w12> ^spelling |the|
#         ^next <w13>)
#   (<w13> ^spelling |center|
#         ^next <w14>)
#   (<w14> ^spelling |location|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
}