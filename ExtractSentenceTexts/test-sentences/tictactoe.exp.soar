#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Fri Aug 21 12:09:29 EDT 2015
#    from file 'tictactoe.exp.txt'.
chunk off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 9
        ^failure-count 0
        ^success-count 0)
}


#   The name of the game is tic-tac-toe.
sp {elaborate*state*sentence*the-name-of-the-game-is-tic-tac-toe
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S122>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is tic-tac-toe.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |tic-tac-toe|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S122> ^arg1 <S240>
           ^message-type object-description
           ^predicate <R10165>)
   (<S240> ^2 <S241>
           ^handle of1
           ^item-type predicate)
   (<S241> ^2 <G3>
           ^handle name1)
   (<G3> ^handle game1
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<R10165> #^handle tic-tac-toe1
              ^item-type predicate
              ^word-structure <N10053>)
   (<N10053> ^referent <R10165>
              ^spelling tic-tac-toe)
}


#   The name of an action is place-block.
sp {elaborate*state*sentence*the-name-of-an-action-is-place-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S298>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is place-block.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |place-block|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S298> ^arg1 <S416>
           ^message-type object-description
           ^predicate <R10286>)
   (<S416> ^2 <S417>
           ^handle of1
           ^item-type predicate)
   (<S417> ^2 <A10025>
           ^handle name1)
   (<A10025> ^handle action
              ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<R10286> #^handle place-block2
              ^item-type predicate
              ^word-structure <N10092>)
   (<N10092> ^referent <R10286>
              ^spelling place-block)
}


#   Move a free red block onto a clear location.
sp {elaborate*state*sentence*move-a-free-red-block-onto-a-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S474>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Move a free red block onto a clear location.|)
   (<w0> ^spelling |move|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |free|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |block|
         ^next <w5>)
   (<w5> ^spelling |onto|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |clear|
         ^next <w8>)
   (<w8> ^spelling |location|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S474> ^action <A1008>
           ^arg1 <P90128>
           ^arg2 <S651>
           ^message-type command)
   (<A1008> ^handle move1
             ^item-type action)
   (<P90128> #^handle new-object-id3
             ^item-type block
             ^predicates <P90129>
             ^predicates-copied true)
   (<P90129> ^category block
             ^color red1
             ^dialog-object true
             ^property free)
   (<S651> ^2 <P90138>
           ^handle on1
           ^item-type predicate)
   (<P90138> #^handle new-object-id4
             ^item-type location
             ^predicates <P90139>
             ^predicates-copied true)
   (<P90139> ^category location
             ^dialog-object true
             ^handle clear
             ^handle location
             ^property clear)
}


#   If a location is clear then you can move a free red block onto the location.
sp {elaborate*state*sentence*if-a-location-is-clear-then-you-can-move-a-free-red-block-onto-the-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S678>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is clear then you can move a free red block onto the location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |clear|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |you|
         ^next <w7>)
   (<w7> ^spelling |can|
         ^next <w8>)
   (<w8> ^spelling |move|
         ^next <w9>)
   (<w9> ^spelling |a|
         ^next <w10>)
   (<w10> ^spelling |free|
         ^next <w11>)
   (<w11> ^spelling |red|
         ^next <w12>)
   (<w12> ^spelling |block|
         ^next <w13>)
   (<w13> ^spelling |onto|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |location|
         ^next <w16>)
   (<w16> ^spelling |.|
         ^next nil)
   (<S678> ^if-subclause <S796>
           ^message-type conditional
           ^then-subclause <S1099>)
   (<S796> ^arg1 <P90148>
           ^predicate <C11>)
   (<P90148> #^handle new-object-id5
             ^item-type location
             ^predicates <P90149>
             ^predicates-copied true)
   (<P90149> ^category location
             ^dialog-object true
             ^handle location)
   (<C11> ^handle clear
           ^item-type predicate
           ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<S1099> ^action <A1008>
            ^action-modifier <C42>
            ^agent <R10036>
            ^arg1 <P90175>
            ^arg2 <S1082>)
   (<A1008> ^handle move1
             ^item-type action)
   (<C42> ^handle can)
   (<R10036> ^arm <A10070>
             ^handle rosie
             ^item-type object
             ^predicates <P90060>)
   (<A10070> ^action wait)
   (<P90060> ^handle rosie)
   (<P90175> #^handle new-object-id6
             ^item-type block
             ^predicates <P90176>
             ^predicates-copied true)
   (<P90176> ^category object
             ^color red1
             ^dialog-object true
             ^handle free
             ^handle red1
             ^handle block
             ^property free)
   (<S1082> ^2 <P90148>
            ^handle on1
            ^item-type predicate)
}


#   If a location is below a red block then it is captured.
sp {elaborate*state*sentence*if-a-location-is-below-a-red-block-then-it-is-captured
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1126>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is below a red block then it is captured.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |below|
         ^next <w5>)
   (<w5> ^spelling |a|
         ^next <w6>)
   (<w6> ^spelling |red|
         ^next <w7>)
   (<w7> ^spelling |block|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |captured|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
   (<S1126> ^if-subclause <S1244>
            ^message-type conditional
            ^then-subclause <S1406>)
   (<S1244> ^arg1 <P90215>
            ^predicate <S1335>)
   (<P90215> #^handle new-object-id7
             ^item-type location
             ^predicates <P90216>
             ^predicates-copied true)
   (<P90216> ^category location
             ^dialog-object true
             ^handle location)
   (<S1335> ^2 <P90237>
            ^handle below1
            ^item-type predicate)
   (<S1406> ^arg1 <P90215>)
   (<P90237> #^handle new-object-id8
             ^item-type object
             ^predicates <P90238>
             ^predicates-copied true)
   (<P90238> ^category block
             ^color red1
             ^dialog-object true
             ^handle red1
             ^handle block)
}


#   The goal is that three captured locations are linear.
sp {elaborate*state*sentence*the-goal-is-that-three-captured-locations-are-linear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1467>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three captured locations are linear.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |captured|
         ^next <w6>)
   (<w6> ^spelling |locations|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |linear|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S1467> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S1541>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S1541> ^arg1 <P90289>
            ^predicate <L4>)
   (<P90289> #^handle new-object-id9
             ^item-type location
             ^predicates <P90290>
             ^predicates-copied true)
   (<P90290> ^category location
             ^dialog-object true
             ^handle 3
             ^handle captured
             ^handle location
             ^multiple true
             ^number 3
             ^property captured
             ^visibility not-visible)
   (<L4> ^handle linear
          ^item-type predicate
          ^property <C12>)
   (<C12> ^handle property
           ^type visual)
}


#   The goal is that three captured locations are in a line.
sp {elaborate*state*sentence*the-goal-is-that-three-captured-locations-are-in-a-line
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1723>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three captured locations are in a line.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |captured|
         ^next <w6>)
   (<w6> ^spelling |locations|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |in|
         ^next <w9>)
   (<w9> ^spelling |a|
         ^next <w10>)
   (<w10> ^spelling |line|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S1723> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S1797>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S1797> ^arg1 <P90339>
            ^predicate <S1996>)
   (<P90339> #^handle new-object-id10
             ^item-type location
             ^predicates <P90340>
             ^predicates-copied true)
   (<P90340> ^category location
             ^dialog-object true
             ^handle 3
             ^handle captured
             ^handle location
             ^multiple true
             ^number 3
             ^property captured
             ^visibility not-visible)
   (<S1996> ^2 <P90356>
            ^handle in1
            ^item-type predicate)
   (<P90356> #^handle new-object-id11
             ^item-type object
             ^predicates <P90357>
             ^predicates-copied true)
   (<P90357> ^category object
             ^dialog-object true
             ^handle line1
             ^shape line1)
}


#   The goal is that three red blocks are ontop their locations and those locations are linear.
sp {elaborate*state*sentence*the-goal-is-that-three-red-blocks-are-ontop-their-locations-and-those-locations-are-linear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2019>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three red blocks are ontop their locations and those locations are linear.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |blocks|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |ontop|
         ^next <w9>)
   (<w9> ^spelling |their|
         ^next <w10>)
   (<w10> ^spelling |locations|
         ^next <w11>)
   (<w11> ^spelling |and|
         ^next <w12>)
   (<w12> ^spelling |those|
         ^next <w13>)
   (<w13> ^spelling |locations|
         ^next <w14>)
   (<w14> ^spelling |are|
         ^next <w15>)
   (<w15> ^spelling |linear|
         ^next <w16>)
   (<w16> ^spelling |.|
         ^next nil)
   (<S2019> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S2093>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S2093> ^subclause <S2218>
            ^subclause <S2405>)
   (<S2218> ^arg1 <P90404>
            ^predicate <S2292>)
   (<P90404> #^handle new-object-id12
             ^item-type object
             ^predicates <P90405>
             ^predicates-copied true)
   (<P90405> ^category object
             ^color red1
             ^dialog-object true
             ^handle 3
             ^handle red1
             ^handle block
             ^multiple true
             ^number 3
             ^visibility not-visible)
   (<S2292> ^2 <P90420>
            ^handle on1
            ^item-type predicate)
   (<P90420> #^handle new-object-id13
             ^item-type object
             ^predicates <P90421>
             ^predicates-copied true)
   (<P90421> ^category object
             ^dialog-object true
             ^handle location
             ^multiple true
             ^visibility not-visible)
   (<S2405> ^arg1 <P90215>
            ^predicate <L4>)
   (<P90215> #^handle new-object-id7
             ^item-type location
             ^predicates <P90216>
             ^predicates-copied true)
   (<P90216> ^category location
             ^dialog-object true
             ^handle location)
   (<L4> ^handle linear
          ^item-type predicate
          ^property <C12>)
   (<C12> ^handle property
           ^type visual)
}


#   The goal is that three red blocks are ontop their locations and those locations are in a row.
sp {elaborate*state*sentence*the-goal-is-that-three-red-blocks-are-ontop-their-locations-and-those-locations-are-in-a-row
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2462>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three red blocks are ontop their locations and those locations are in a row.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |blocks|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |ontop|
         ^next <w9>)
   (<w9> ^spelling |their|
         ^next <w10>)
   (<w10> ^spelling |locations|
         ^next <w11>)
   (<w11> ^spelling |and|
         ^next <w12>)
   (<w12> ^spelling |those|
         ^next <w13>)
   (<w13> ^spelling |locations|
         ^next <w14>)
   (<w14> ^spelling |are|
         ^next <w15>)
   (<w15> ^spelling |in|
         ^next <w16>)
   (<w16> ^spelling |a|
         ^next <w17>)
   (<w17> ^spelling |row|
         ^next <w18>)
   (<w18> ^spelling |.|
         ^next nil)
   (<S2462> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S2536>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S2536> ^subclause <S2661>
            ^subclause <S2848>)
   (<S2661> ^arg1 <P90516>
            ^predicate <S2735>)
   (<P90516> #^handle new-object-id14
             ^item-type object
             ^predicates <P90517>
             ^predicates-copied true)
   (<P90517> ^category object
             ^color red1
             ^dialog-object true
             ^handle 3
             ^handle red1
             ^handle block
             ^multiple true
             ^number 3
             ^visibility not-visible)
   (<S2735> ^2 <P90532>
            ^handle on1
            ^item-type predicate)
   (<P90532> #^handle new-object-id15
             ^item-type object
             ^predicates <P90533>
             ^predicates-copied true)
   (<P90533> ^category object
             ^dialog-object true
             ^handle location
             ^multiple true
             ^visibility not-visible)
   (<S2848> ^arg1 <P90215>
            ^predicate <S2922>)
   (<P90215> #^handle new-object-id7
             ^item-type location
             ^predicates <P90216>
             ^predicates-copied true)
   (<P90216> ^category location
             ^dialog-object true
             ^handle location)
   (<S2922> ^2 <P90591>
            ^handle in1
            ^item-type predicate)
   (<P90591> #^handle new-object-id16
             ^item-type object
             ^predicates <P90592>
             ^predicates-copied true)
   (<P90592> ^category object
             ^dialog-object true
             ^handle line1
             ^shape line1)
}


