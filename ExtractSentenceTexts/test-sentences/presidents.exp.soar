#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Fri Sep 02 10:13:38 EDT 2016
#    from file 'presidents.exp.txt'.
learn --off

#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 5
        ^failure-count 0
        ^success-count 0)
}


#   The name of the game is president.
sp {elaborate*state*sentence*the-name-of-the-game-is-president
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S124>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is president.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |president|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S124> ^arg1 <S246>
           ^message-type object-description
           ^predicate <N10072>)
   (<S246> ^2 <S247>
           ^handle of1
           ^item-type predicate)
   (<S247> ^2 <N10049>
           ^handle name1)
   (<N10049> ^handle game1
             ^property <C62>)
   (<C62> ^handle concept
           ^type conceptual)
   (<N10072> #^handle president2
             ^item-type predicate
             ^word-structure <N10071>)
   (<N10071> ^referent <R10193>
              ^spelling president)
   (<R10193> #^handle president2
              ^word-structure <N10071>)
}


#   If the rank of one of your cards is equal to the rank of the top card then you can play your card.
sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-equal-to-the-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S304>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is equal to the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |equal|
         ^next <w10>)
   (<w10> ^spelling |to|
         ^next <w11>)
   (<w11> ^spelling |the|
         ^next <w12>)
   (<w12> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
   (<S304> ^if-subclause <S517>
           ^message-type conditional
           ^then-subclause <S854>)
   (<S517> ^action <N10119>
           ^arg1 <N10091>
           ^arg1 <S518>
           ^predicate <S679>)
   (<N10119> ^handle is1
             ^item-type action)
   (<N10091> ^handle rank1
             ^property <C62>
             ^relation <S499>)
   (<C62> ^handle concept
           ^type conceptual)
   (<S499> ^2 <R10357>
           ^handle of1)
   (<R10357> ^number 1
             ^relation <S494>)
   (<S494> ^2 <P90216>
           ^handle of1)
   (<P90216> #^handle new-object-id3
             ^item-type card
             ^possessive true
             ^predicates <P90217>
             ^predicates-copied true)
   (<S518> ^2 <S519>
           ^handle of1
           ^item-type predicate)
   (<S519> ^2 <R10357>
           ^handle rank1)
   (<S679> ^2 <N10137>
           ^handle equal
           ^item-type predicate)
   (<N10137> ^handle rank1
             ^property <C62>
             ^relation <S677>)
   (<S677> ^2 <P90272>
           ^handle of1)
   (<P90272> #^handle new-object-id4
             ^item-type card
             ^predicates <P90273>
             ^predicates-copied true)
   (<P90273> ^category card
             ^dialog-object true
             ^handle top
             ^name top
             ^visibility not-visible)
   (<S854> ^action <N10166>
           ^action-modifier <N10164>
           ^agent <R10090>
           ^arg1 <P90295>)
   (<N10166> ^handle play
             ^item-type action
             ^procedural <E11>
             ^type action)
   (<E11> ^op_name initiate-play1)
   (<N10164> ^handle can)
   (<R10090> ^arm <A10140>
             ^handle rosie
             ^item-type object
             ^predicates <P90148>)
   (<A10140> ^action wait
             ^state internal)
   (<P90148> ^handle rosie)
   (<P90295> #^handle new-object-id5
             ^item-type card
             ^possessive true
             ^predicates <P90296>
             ^predicates-copied true)
   (<P90296> ^category card
             ^dialog-object true
             ^visibility not-visible)
}


#   If the rank of one of your cards is greater than the rank of the top card then you can play your card.
sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-greater-than-the-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S881>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is greater than the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |greater|
         ^next <w10>)
   (<w10> ^spelling |than|
         ^next <w11>)
   (<w11> ^spelling |the|
         ^next <w12>)
   (<w12> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
   (<S881> ^if-subclause <S1094>
           ^message-type conditional
           ^then-subclause <S1427>)
   (<S1094> ^action <N10238>
            ^arg1 <N10210>
            ^arg1 <S1095>
            ^predicate <S1252>)
   (<N10238> ^handle is1
             ^item-type action)
   (<N10210> ^handle rank1
             ^property <C62>
             ^relation <S1076>)
   (<C62> ^handle concept
           ^type conceptual)
   (<S1076> ^2 <R10761>
            ^handle of1)
   (<R10761> ^number 1
             ^relation <S1071>)
   (<S1071> ^2 <P90332>
            ^handle of1)
   (<P90332> #^handle new-object-id6
             ^item-type card
             ^possessive true
             ^predicates <P90333>
             ^predicates-copied true)
   (<S1095> ^2 <S1096>
            ^handle of1
            ^item-type predicate)
   (<S1096> ^2 <R10761>
            ^handle rank1)
   (<S1252> ^2 <N10256>
            ^handle greater-than1
            ^item-type predicate)
   (<N10256> ^handle rank1
             ^property <C62>
             ^relation <S1250>)
   (<S1250> ^2 <P90272>
            ^handle of1)
   (<P90272> #^handle new-object-id4
             ^item-type card
             ^predicates <P90273>
             ^predicates-copied true)
   (<P90273> ^category card
             ^dialog-object true
             ^handle top
             ^name top
             ^visibility not-visible)
   (<S1427> ^action <N10284>
            ^action-modifier <N10282>
            ^agent <R10090>
            ^arg1 <P90411>)
   (<N10284> ^handle play
             ^item-type action
             ^procedural <E11>
             ^type action)
   (<E11> ^op_name initiate-play1)
   (<N10282> ^handle can)
   (<R10090> ^arm <A10140>
             ^handle rosie
             ^item-type object
             ^predicates <P90148>)
   (<A10140> ^action wait
             ^state internal)
   (<P90148> ^handle rosie)
   (<P90411> #^handle new-object-id7
             ^item-type card
             ^possessive true
             ^predicates <P90412>
             ^predicates-copied true)
   (<P90412> ^category card
             ^dialog-object true
             ^visibility not-visible)
}


#   If one of your cards is a clear card then you can play the card.
sp {elaborate*state*sentence*if-one-of-your-cards-is-a-clear-card-then-you-can-play-the-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1454>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If one of your cards is a clear card then you can play the card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |one|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |your|
         ^next <w4>)
   (<w4> ^spelling |cards|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |clear|
         ^next <w8>)
   (<w8> ^spelling |card|
         ^next <w9>)
   (<w9> ^spelling |then|
         ^next <w10>)
   (<w10> ^spelling |you|
         ^next <w11>)
   (<w11> ^spelling |can|
         ^next <w12>)
   (<w12> ^spelling |play|
         ^next <w13>)
   (<w13> ^spelling |the|
         ^next <w14>)
   (<w14> ^spelling |card|
         ^next <w15>)
   (<w15> ^spelling |.|
         ^next nil)
   (<S1454> ^if-subclause <S1599>
            ^message-type conditional
            ^then-subclause <S1842>)
   (<S1599> ^action <N10346>
            ^arg1 <R11115>
            ^predicate <N10362>
            ^predicate <N10365>)
   (<N10346> ^handle is1
             ^item-type action)
   (<R11115> ^number 1
             ^relation <S1578>)
   (<S1578> ^2 <P90433>
            ^handle of1)
   (<P90433> #^handle new-object-id8
             ^item-type card
             ^possessive true
             ^predicates <P90434>
             ^predicates-copied true)
   (<P90434> ^category card
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
   (<N10362> ^handle clear
             ^item-type predicate
             ^property <C38>)
   (<C38> ^handle property
           ^type visual)
   (<N10365> ^handle card
             ^item-type predicate
             ^property <P7000>)
   (<P7000> ^handle category
             ^item-type property
             ^type visual)
   (<S1842> ^action <N10376>
            ^action-modifier <N10374>
            ^agent <R10090>
            ^arg1 <P90411>)
   (<N10376> ^handle play
             ^item-type action
             ^procedural <E11>
             ^type action)
   (<E11> ^op_name initiate-play1)
   (<N10374> ^handle can)
   (<R10090> ^arm <A10140>
             ^handle rosie
             ^item-type object
             ^predicates <P90148>)
   (<A10140> ^action wait
             ^state internal)
   (<P90148> ^handle rosie)
   (<P90411> #^handle new-object-id7
             ^item-type card
             ^possessive true
             ^predicates <P90412>
             ^predicates-copied true)
   (<P90412> ^category card
             ^dialog-object true
             ^visibility not-visible)
}


#   If a card has a value of two then it is clear.
sp {elaborate*state*sentence*if-a-card-has-a-value-of-two-then-it-is-clear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1869>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a card has a value of two then it is clear.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |card|
         ^next <w3>)
   (<w3> ^spelling |has|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |value|
         ^next <w6>)
   (<w6> ^spelling |of|
         ^next <w7>)
   (<w7> ^spelling |two|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |clear|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
   (<S1869> ^if-subclause <S1964>
            ^message-type conditional
            ^then-subclause <S2132>)
   (<S1964> ^action <N10422>
            ^agent <P90506>
            ^arg1 <N10437>
            ^arg1 <S2060>)
   (<N10422> ^handle has
             ^item-type action
             ^procedural <E10>
             ^type action)
   (<E10> ^op_name initiate-has1)
   (<P90506> #^handle new-object-id9
             ^item-type card
             ^predicates <P90507>
             ^predicates-copied true)
   (<P90507> ^category card
             ^dialog-object true
             ^visibility unknown-visible)
   (<N10437> ^handle value
             ^property <C62>
             ^relation <S2058>)
   (<C62> ^handle concept
           ^type conceptual)
   (<S2058> ^2 <R11450>
            ^handle of1)
   (<R11450> ^number 2)
   (<S2060> ^2 <S2061>
            ^handle of1
            ^item-type predicate)
   (<S2061> ^2 <R11450>
            ^handle value)
   (<S2132> ^action <N10454>
            ^arg1 <P90506>
            ^predicate <N10465>)
   (<N10454> ^handle is1
             ^item-type action)
   (<N10465> ^handle clear
             ^item-type predicate
             ^property <C38>)
   (<C38> ^handle property
           ^type visual)
}


