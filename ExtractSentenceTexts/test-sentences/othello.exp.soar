#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Wed Sep 23 14:53:33 EDT 2015
#    from file 'othello.exp.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 9
        ^failure-count 0
        ^success-count 0)
}


#   The name of the game is Othello.
sp {elaborate*state*sentence*the-name-of-the-game-is-othello
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S135>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is Othello.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |othello|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S135> ^arg1 <S254>
           ^message-type object-description
           ^predicate <N10064>)
   (<S254> ^2 <S255>
           ^handle of1
           ^item-type predicate)
   (<S255> ^2 <N10044>
           ^handle name1)
   (<N10044> ^handle game1
             ^property <C27>)
   (<C27> ^handle concept
           ^type conceptual)
   (<N10064> #^handle othello1
             ^item-type predicate
             ^word-structure <N10063>)
   (<N10063> ^referent <R10174>
              ^spelling othello)
   (<R10174> ^handle othello1
              ^word-structure <N10063>)
}


#   The name of an action is capture.
sp {elaborate*state*sentence*the-name-of-an-action-is-capture
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S312>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is capture.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |capture|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S312> ^arg1 <S431>
           ^message-type object-description
           ^predicate <N10106>)
   (<S431> ^2 <S432>
           ^handle of1
           ^item-type predicate)
   (<S432> ^2 <N10086>
           ^handle name1)
   (<N10086> ^handle action
             ^property <C27>)
   (<C27> ^handle concept
           ^type conceptual)
   (<N10106> #^handle capture2
             ^item-type predicate
             ^word-structure <N10105>)
   (<N10105> ^referent <R10295>
              ^spelling capture)
   (<R10295> #^handle capture2
              ^word-structure <N10105>)
}


#   If a piece is white then it is an enemy piece.
sp {elaborate*state*sentence*if-a-piece-is-white-then-it-is-an-enemy-piece
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S489>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a piece is white then it is an enemy piece.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |piece|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |white|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |it|
         ^next <w7>)
   (<w7> ^spelling |is|
         ^next <w8>)
   (<w8> ^spelling |an|
         ^next <w9>)
   (<w9> ^spelling |enemy|
         ^next <w10>)
   (<w10> ^spelling |piece|
         ^next <w11>)
   (<w11> ^spelling |.|
         ^next nil)
   (<S489> ^if-subclause <S599>
           ^message-type conditional
           ^then-subclause <S712>)
   (<S599> ^arg1 <P90127>
           ^predicate <N10138>)
   (<P90127> #^handle new-object-id3
             ^item-type piece
             ^predicates <P90128>
             ^predicates-copied true)
   (<P90128> ^category piece
             ^dialog-object true)
   (<N10138> ^handle white1
             ^item-type predicate
             ^property <P1000>)
   (<P1000> ^handle color
             ^item-type property
             ^type visual)
   (<S712> ^arg1 <P90127>
           ^predicate <N10161>
           ^predicate <N10164>)
   (<N10161> ^handle enemy
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<N10164> ^handle piece
             ^item-type predicate
             ^property <P7000>)
   (<P7000> ^handle category
             ^item-type property
             ^type visual)
}


#   A white piece is an enemy piece.
sp {elaborate*state*sentence*a-white-piece-is-an-enemy-piece
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S807>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |A white piece is an enemy piece.|)
   (<w0> ^spelling |a|
         ^next <w1>)
   (<w1> ^spelling |white|
         ^next <w2>)
   (<w2> ^spelling |piece|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |an|
         ^next <w5>)
   (<w5> ^spelling |enemy|
         ^next <w6>)
   (<w6> ^spelling |piece|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S807> ^arg1 <P90160>
           ^message-type object-description
           ^predicate <N10205>
           ^predicate <N10208>)
   (<P90160> #^handle new-object-id4
             ^item-type piece
             ^predicates <P90161>
             ^predicates-copied true)
   (<P90161> ^category piece
             ^color white1
             ^dialog-object true)
   (<N10205> ^handle enemy
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<N10208> ^handle piece
             ^item-type predicate
             ^property <P7000>)
   (<P7000> ^handle category
             ^item-type property
             ^type visual)
}


#   An enemy piece is white.
sp {elaborate*state*sentence*an-enemy-piece-is-white
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S984>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |An enemy piece is white.|)
   (<w0> ^spelling |an|
         ^next <w1>)
   (<w1> ^spelling |enemy|
         ^next <w2>)
   (<w2> ^spelling |piece|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |white|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S984> ^arg1 <P90181>
           ^message-type object-description
           ^predicate <N10243>)
   (<P90181> #^handle new-object-id5
             ^item-type piece
             ^predicates <P90182>
             ^predicates-copied true)
   (<P90182> ^category piece
             ^dialog-object true
             ^property enemy)
   (<N10243> ^handle white1
             ^item-type predicate
             ^property <P1000>)
   (<P1000> ^handle color
             ^item-type property
             ^type visual)
}


#   If a location is below an enemy piece then the location is occupied.
sp {elaborate*state*sentence*if-a-location-is-below-an-enemy-piece-then-the-location-is-occupied
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1127>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is below an enemy piece then the location is occupied.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |below|
         ^next <w5>)
   (<w5> ^spelling |an|
         ^next <w6>)
   (<w6> ^spelling |enemy|
         ^next <w7>)
   (<w7> ^spelling |piece|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |location|
         ^next <w11>)
   (<w11> ^spelling |is|
         ^next <w12>)
   (<w12> ^spelling |occupied|
         ^next <w13>)
   (<w13> ^spelling |.|
         ^next nil)
   (<S1127> ^if-subclause <S1237>
            ^message-type conditional
            ^then-subclause <S1440>)
   (<S1237> ^arg1 <P90194>
            ^predicate <S1328>)
   (<P90194> #^handle new-object-id6
             ^item-type location
             ^predicates <P90195>
             ^predicates-copied true)
   (<P90195> ^category location
             ^dialog-object true)
   (<S1328> ^2 <P90216>
            ^handle below1
            ^item-type predicate)
   (<P90216> #^handle new-object-id7
             ^item-type piece
             ^predicates <P90217>
             ^predicates-copied true)
   (<P90217> ^category piece
             ^dialog-object true
             ^property enemy)
   (<S1440> ^arg1 <P90194>
            ^predicate <N10316>)
   (<N10316> ^handle occupied
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
}


#   If the locations between a clear location and a captured location are occupied then you can place a piece on the clear location.
sp {elaborate*state*sentence*if-the-locations-between-a-clear-location-and-a-captured-location-are-occupied-then-you-can-place-a-piece-on-the-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1501>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the locations between a clear location and a captured location are occupied then you can place a piece on the clear location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |between|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |clear|
         ^next <w6>)
   (<w6> ^spelling |location|
         ^next <w7>)
   (<w7> ^spelling |and|
         ^next <w8>)
   (<w8> ^spelling |a|
         ^next <w9>)
   (<w9> ^spelling |captured|
         ^next <w10>)
   (<w10> ^spelling |location|
         ^next <w11>)
   (<w11> ^spelling |are|
         ^next <w12>)
   (<w12> ^spelling |occupied|
         ^next <w13>)
   (<w13> ^spelling |then|
         ^next <w14>)
   (<w14> ^spelling |you|
         ^next <w15>)
   (<w15> ^spelling |can|
         ^next <w16>)
   (<w16> ^spelling |place|
         ^next <w17>)
   (<w17> ^spelling |a|
         ^next <w18>)
   (<w18> ^spelling |piece|
         ^next <w19>)
   (<w19> ^spelling |on|
         ^next <w20>)
   (<w20> ^spelling |the|
         ^next <w21>)
   (<w21> ^spelling |clear|
         ^next <w22>)
   (<w22> ^spelling |location|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
   (<S1501> ^if-subclause <S1756>
            ^message-type conditional
            ^then-subclause <S2069>)
   (<S1756> ^arg1 <P90310>
            ^predicate <N10385>)
   (<P90310> #^handle new-object-id10
             ^item-type location
             ^predicates <P90311>
             ^predicates-copied true
             ^relation <S1735>)
   (<P90311> ^category location
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
   (<S1735> ^2 <P90271>
             <P90281>
            ^handle between)
   (<P90281> #^handle new-object-id9
             ^item-type location
             ^predicates <P90282>
             ^predicates-copied true)
   (<P90282> ^category location
             ^dialog-object true
             ^property captured)
   (<N10385> ^handle occupied
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<S2069> ^action <N10395>
            ^action-modifier <N10393>
            ^agent <R10045>
            ^arg1 <P90377>
            ^arg2 <S2048>)
   (<N10395> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^item-type action)
   (<P90001> ^arg1 <P90002>
              ^arg2 <P90003>
              ^execution-operator execute-put-down1
              ^op_name initiate-put-down1)
   (<P90002> ^arg-type object
              ^id <O1>)
   (<P90003> ^2 <O2>
              ^arg-type predicate
              ^id <P90004>)
   (<N10393> ^handle can)
   (<R10045> ^arm <A10081>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10081> ^action wait)
   (<P90068> ^handle rosie)
   (<P90377> #^handle new-object-id11
             ^item-type piece
             ^predicates <P90378>
             ^predicates-copied true)
   (<P90378> ^category piece
             ^dialog-object true)
   (<S2048> ^2 <P90271>
            ^handle on1
            ^item-type predicate)
   (<P90271> #^handle new-object-id8
             ^item-type location
             ^predicates <P90272>
             ^predicates-copied true
             ^relation <S1735>)
   (<P90272> ^category location
             ^dialog-object true
             ^property clear)
}


#   If the locations between a clear location and a captured location are below enemy pieces then you can place a piece on the clear location.
sp {elaborate*state*sentence*if-the-locations-between-a-clear-location-and-a-captured-location-are-below-enemy-pieces-then-you-can-place-a-piece-on-the-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2096>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the locations between a clear location and a captured location are below enemy pieces then you can place a piece on the clear location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |between|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |clear|
         ^next <w6>)
   (<w6> ^spelling |location|
         ^next <w7>)
   (<w7> ^spelling |and|
         ^next <w8>)
   (<w8> ^spelling |a|
         ^next <w9>)
   (<w9> ^spelling |captured|
         ^next <w10>)
   (<w10> ^spelling |location|
         ^next <w11>)
   (<w11> ^spelling |are|
         ^next <w12>)
   (<w12> ^spelling |below|
         ^next <w13>)
   (<w13> ^spelling |enemy|
         ^next <w14>)
   (<w14> ^spelling |pieces|
         ^next <w15>)
   (<w15> ^spelling |then|
         ^next <w16>)
   (<w16> ^spelling |you|
         ^next <w17>)
   (<w17> ^spelling |can|
         ^next <w18>)
   (<w18> ^spelling |place|
         ^next <w19>)
   (<w19> ^spelling |a|
         ^next <w20>)
   (<w20> ^spelling |piece|
         ^next <w21>)
   (<w21> ^spelling |on|
         ^next <w22>)
   (<w22> ^spelling |the|
         ^next <w23>)
   (<w23> ^spelling |clear|
         ^next <w24>)
   (<w24> ^spelling |location|
         ^next <w25>)
   (<w25> ^spelling |.|
         ^next nil)
   (<S2096> ^if-subclause <S2351>
            ^message-type conditional
            ^then-subclause <S2720>)
   (<S2351> ^arg1 <P90442>
            ^predicate <S2437>)
   (<P90442> #^handle new-object-id14
             ^item-type location
             ^predicates <P90443>
             ^predicates-copied true
             ^relation <S2330>)
   (<P90443> ^category location
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
   (<S2330> ^2 <P90409>
            ^handle between)
   (<P90409> #^handle new-object-id13
             ^item-type location
             ^predicates <P90410>
             ^predicates-copied true)
   (<P90410> ^category location
             ^dialog-object true
             ^property captured)
   (<S2437> ^2 <P90492>
            ^handle below1
            ^item-type predicate)
   (<P90492> #^handle new-object-id15
             ^item-type piece
             ^predicates <P90493>
             ^predicates-copied true)
   (<P90493> ^category piece
             ^dialog-object true
             ^multiple true
             ^property enemy
             ^visibility not-visible)
   (<S2720> ^action <N10527>
            ^action-modifier <N10525>
            ^agent <R10045>
            ^arg1 <P90558>
            ^arg2 <S2699>)
   (<N10527> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^item-type action)
   (<P90001> ^arg1 <P90002>
              ^arg2 <P90003>
              ^execution-operator execute-put-down1
              ^op_name initiate-put-down1)
   (<P90002> ^arg-type object
              ^id <O1>)
   (<P90003> ^2 <O2>
              ^arg-type predicate
              ^id <P90004>)
   (<N10525> ^handle can)
   (<R10045> ^arm <A10081>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10081> ^action wait)
   (<P90068> ^handle rosie)
   (<P90558> #^handle new-object-id16
             ^item-type piece
             ^predicates <P90559>
             ^predicates-copied true)
   (<P90559> ^category piece
             ^dialog-object true)
   (<S2699> ^2 <P90399>
            ^handle on1
            ^item-type predicate)
   (<P90399> #^handle new-object-id12
             ^item-type location
             ^predicates <P90400>
             ^predicates-copied true
             ^relation <S2330>)
   (<P90400> ^category location
             ^dialog-object true
             ^property clear)
}


#   The goal is that all locations are captured and the number of captured locations is more than the number of occupied locations.
sp {elaborate*state*sentence*the-goal-is-that-all-locations-are-captured-and-the-number-of-captured-locations-is-more-than-the-number-of-occupied-locations
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2747>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that all locations are covered and the number of captured locations is more than the number of occupied locations.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |all|
         ^next <w5>)
   (<w5> ^spelling |locations|
         ^next <w6>)
   (<w6> ^spelling |are|
         ^next <w7>)
   (<w7> ^spelling |covered|
         ^next <w8>)
   (<w8> ^spelling |and|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |number|
         ^next <w11>)
   (<w11> ^spelling |of|
         ^next <w12>)
   (<w12> ^spelling |captured|
         ^next <w13>)
   (<w13> ^spelling |locations|
         ^next <w14>)
   (<w14> ^spelling |is|
         ^next <w15>)
   (<w15> ^spelling |more|
         ^next <w16>)
   (<w16> ^spelling |than|
         ^next <w17>)
   (<w17> ^spelling |the|
         ^next <w18>)
   (<w18> ^spelling |number|
         ^next <w19>)
   (<w19> ^spelling |of|
         ^next <w20>)
   (<w20> ^spelling |occupied|
         ^next <w21>)
   (<w21> ^spelling |locations|
         ^next <w22>)
   (<w22> ^spelling |.|
         ^next nil)
   (<S2747> ^arg1 <N10581>
            ^message-type object-description
            ^subclause <S2821>)
   (<N10581> ^handle goal
             ^property <C27>)
   (<C27> ^handle concept
           ^type conceptual)
   (<S2821> ^subclause <S2933>
            ^subclause <S3145>)
   (<S2933> ^arg1 <P90574>
            ^predicate <N10622>)
   (<P90574> #^handle new-object-id17
             ^item-type location
             ^predicates <P90575>
             ^predicates-copied true)
   (<P90575> ^category location
             ^dialog-object true
             ^handle all
             ^multiple true
             ^quantified <N10600>)
   (<N10600> ^handle all)
   (<N10622> ^handle captured
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<S3145> ^arg1 <S3146>
            ^predicate <S3294>)
   (<S3146> ^2 <S3147>
            ^handle of1
            ^item-type predicate)
   (<S3147> ^2 <P90629>
            ^handle number1)
   (<P90629> #^handle new-object-id18
             ^item-type location
             ^predicates <P90630>
             ^predicates-copied true)
   (<P90630> ^category location
             ^dialog-object true
             ^multiple true
             ^property captured
             ^visibility not-visible)
   (<S3294> ^2 <N10672>
            ^handle larger-than1
            ^item-type predicate)
   (<N10672> ^handle number1
             ^property <C27>
             ^relation <S3292>)
   (<S3292> ^2 <P90693>
            ^handle of1)
   (<P90693> #^handle new-object-id19
             ^item-type location
             ^predicates <P90694>
             ^predicates-copied true)
}


