#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Mon Jul 20 10:46:18 EDT 2015
#    from file 'john_trace.exp.txt'.

#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 43
        ^failure-count 0
        ^success-count 0)
}


#   Stop.
sp {elaborate*state*sentence*stop
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S111>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Stop.|)
   (<w0> ^spelling |stop|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S111> ^action <A1106>
           ^message-type command)
   (<A1106> ^action-type primitive
            ^handle stop1
            ^item-type action
            ^procedural <P90029>
            ^type action)
   (<P90029> ^execution-operator execute-stop1
             ^op_name initiate-stop1)
}


#   Go.
sp {elaborate*state*sentence*go
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S161>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S161> ^action <A1103>
           ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
}


#   Forward.
sp {elaborate*state*sentence*forward
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S211>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Forward.|)
   (<w0> ^spelling |forward|
         ^next <w1>)
   (<w1> ^spelling |.|
         ^next nil)
   (<S211> ^action <A1103>
           ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
}


#   Go forward.
sp {elaborate*state*sentence*go-forward
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S261>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go forward.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |forward|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S261> ^action <A1103>
           ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
}


#   Drive forward.
sp {elaborate*state*sentence*drive-forward
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S328>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive forward.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |forward|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S328> ^action <A1103>
           ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
}


#   Go down the hall.
sp {elaborate*state*sentence*go-down-the-hall
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S395>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go down the hall.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |hall|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S395> ^action <A1103>
           ^arg1 <P12003>
           ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<P12003> ^handle hall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
}


#   Orient north.
sp {elaborate*state*sentence*orient-north
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S496>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Orient north.|)
   (<w0> ^spelling |orient|
         ^next <w1>)
   (<w1> ^spelling |north|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S496> ^action <A1107>
           ^arg1 <P8001>
           ^message-type command)
   (<A1107> ^action-type primitive
            ^handle orient1
            ^item-type action
            ^procedural <P90030>
            ^type action)
   (<P90030> ^arg1 <P90031>
             ^execution-operator execute-orient1
             ^op_name initiate-orient1)
   (<P90031> ^arg-type concept
             ^id <C7>)
   (<P8001> ^handle north1
            ^item-type concept
            ^property <P8000>
            ^yaw 3.14)
   (<P8000> ^handle cardinal-direction1
            ^item-type property)
}


#   Orient s.
sp {elaborate*state*sentence*orient-s
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S571>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Orient s.|)
   (<w0> ^spelling |orient|
         ^next <w1>)
   (<w1> ^spelling |s|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S571> ^action <A1107>
           ^arg1 <P8003>
           ^message-type command)
   (<A1107> ^action-type primitive
            ^handle orient1
            ^item-type action
            ^procedural <P90030>
            ^type action)
   (<P90030> ^arg1 <P90031>
             ^execution-operator execute-orient1
             ^op_name initiate-orient1)
   (<P90031> ^arg-type concept
             ^id <C7>)
   (<P8003> ^handle south1
            ^item-type concept
            ^property <P8000>
            ^yaw 0.)
   (<P8000> ^handle cardinal-direction1
            ^item-type property)
}


#   Face east.
sp {elaborate*state*sentence*face-east
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S646>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Face east.|)
   (<w0> ^spelling |face|
         ^next <w1>)
   (<w1> ^spelling |east|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S646> ^action <A1107>
           ^arg1 <P8002>
           ^message-type command)
   (<A1107> ^action-type primitive
            ^handle orient1
            ^item-type action
            ^procedural <P90030>
            ^type action)
   (<P90030> ^arg1 <P90031>
             ^execution-operator execute-orient1
             ^op_name initiate-orient1)
   (<P90031> ^arg-type concept
             ^id <C7>)
   (<P8002> ^handle east1
            ^item-type concept
            ^property <P8000>
            ^yaw 1.507)
   (<P8000> ^handle cardinal-direction1
            ^item-type property)
}


#   Face west.
sp {elaborate*state*sentence*face-west
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S721>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Face west.|)
   (<w0> ^spelling |face|
         ^next <w1>)
   (<w1> ^spelling |west|
         ^next <w2>)
   (<w2> ^spelling |.|
         ^next nil)
   (<S721> ^action <A1107>
           ^arg1 <P8004>
           ^message-type command)
   (<A1107> ^action-type primitive
            ^handle orient1
            ^item-type action
            ^procedural <P90030>
            ^type action)
   (<P90030> ^arg1 <P90031>
             ^execution-operator execute-orient1
             ^op_name initiate-orient1)
   (<P90031> ^arg-type concept
             ^id <C7>)
   (<P8004> ^handle west1
            ^item-type concept
            ^property <P8000>
            ^yaw -1.507)
   (<P8000> ^handle cardinal-direction1
            ^item-type property)
}


#   Turn left
sp {elaborate*state*sentence*turn-left
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S796>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn left|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |left|
         ^next nil)
   (<S796> ^action <A1100>
           ^arg1 <P9002>
           ^message-type command)
   (<A1100> ^action-type primitive
            ^handle turn1
            ^item-type action
            ^procedural <P90023>
            ^type action)
   (<P90023> ^arg1 <P90024>
             ^execution-operator execute-turn1
             ^op_name initiate-turn1)
   (<P90024> ^arg-type concept
             ^id <C4>)
   (<P9002> ^handle left1
            ^item-type concept
            ^property <P9000>
            ^side 1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
}


#   Turn right
sp {elaborate*state*sentence*turn-right
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S863>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn right|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |right|
         ^next nil)
   (<S863> ^action <A1100>
           ^arg1 <P9001>
           ^message-type command)
   (<A1100> ^action-type primitive
            ^handle turn1
            ^item-type action
            ^procedural <P90023>
            ^type action)
   (<P90023> ^arg1 <P90024>
             ^execution-operator execute-turn1
             ^op_name initiate-turn1)
   (<P90024> ^arg-type concept
             ^id <C4>)
   (<P9001> ^handle right1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
}


#   Turn around
sp {elaborate*state*sentence*turn-around
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S930>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn around|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |around|
         ^next nil)
   (<S930> ^action <A1100>
           ^arg1 <P9003>
           ^message-type command)
   (<A1100> ^action-type primitive
            ^handle turn1
            ^item-type action
            ^procedural <P90023>
            ^type action)
   (<P90023> ^arg1 <P90024>
             ^execution-operator execute-turn1
             ^op_name initiate-turn1)
   (<P90024> ^arg-type concept
             ^id <C4>)
   (<P9003> ^handle around1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 2.7)
   (<P9000> ^handle relative-direction1
            ^item-type property)
}


#   Follow the left wall.
sp {elaborate*state*sentence*follow-the-left-wall
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S997>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow the left wall.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |left|
         ^next <w3>)
   (<w3> ^spelling |wall|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S997> ^action <A1104>
           ^arg1 <P9002>
           ^arg1 <P12002>
           ^message-type command)
   (<A1104> ^action-type primitive
            ^handle follow-wall1
            ^item-type action
            ^procedural <P90027>
            ^type action)
   (<P90027> ^arg1 <P90028>
             ^execution-operator execute-follow-wall1
             ^op_name initiate-follow-wall1)
   (<P90028> ^arg-type concept
             ^id <C6>)
   (<P9002> ^handle left1
            ^item-type concept
            ^property <P9000>
            ^side 1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
   (<P12002> ^handle wall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
}


#   Follow the right wall.
sp {elaborate*state*sentence*follow-the-right-wall
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 15)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1106>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow the right wall.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |right|
         ^next <w3>)
   (<w3> ^spelling |wall|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1106> ^action <A1104>
            ^arg1 <P9001>
            ^arg1 <P12002>
            ^message-type command)
   (<A1104> ^action-type primitive
            ^handle follow-wall1
            ^item-type action
            ^procedural <P90027>
            ^type action)
   (<P90027> ^arg1 <P90028>
             ^execution-operator execute-follow-wall1
             ^op_name initiate-follow-wall1)
   (<P90028> ^arg-type concept
             ^id <C6>)
   (<P9001> ^handle right1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
   (<P12002> ^handle wall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
}


#   Go to the waypoint.
sp {elaborate*state*sentence*go-to-the-waypoint
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 16)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1215>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the waypoint.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |waypoint|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1215> ^action <A1103>
            ^message-type command
            ^predicate <S1303>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1303> ^2 <P90168>
            ^handle on1
            ^item-type predicate)
   (<P90168> ^handle new-object-id1
             ^item-type object
             ^predicates <P90169>
             ^predicates-copied true)
   (<P90169> ^dialog-object true
             ^spatial-shape waypoint
             ^visible false)
}


#   Go to the kitchen.
sp {elaborate*state*sentence*go-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 17)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1330>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the kitchen.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |kitchen|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1330> ^action <A1103>
            ^message-type command
            ^predicate <S1418>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1418> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Drive to the kitchen.
sp {elaborate*state*sentence*drive-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 18)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1445>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive to the kitchen.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |kitchen|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1445> ^action <A1103>
            ^message-type command
            ^predicate <S1537>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1537> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Go to the starting location.
sp {elaborate*state*sentence*go-to-the-starting-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 19)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1564>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the starting location.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |starting|
         ^next <w4>)
   (<w4> ^spelling |location|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S1564> ^action <A1103>
            ^message-type command
            ^predicate <S1669>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1669> ^2 <P90282>
            ^handle on1
            ^item-type predicate)
   (<P90282> ^handle new-object-id3
             ^item-type object
             ^predicates <P90283>
             ^predicates-copied true)
   (<P90283> ^category location1
             ^dialog-object true
             ^modifier starting
             ^visible false)
}


#   Go to your starting location.
sp {elaborate*state*sentence*go-to-your-starting-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 20)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1696>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to your starting location.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |your|
         ^next <w3>)
   (<w3> ^spelling |starting|
         ^next <w4>)
   (<w4> ^spelling |location|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S1696> ^action <A1103>
            ^message-type command
            ^predicate <S1805>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1805> ^2 <P90282>
            ^handle on1
            ^item-type predicate)
   (<P90282> ^handle new-object-id3
             ^item-type object
             ^predicates <P90283>
             ^predicates-copied true)
   (<P90283> ^category location1
             ^dialog-object true
             ^modifier starting
             ^visible false)
}


#   Go to the waypoint. (duplicate)
sp {elaborate*state*sentence*go-to-the-waypoint
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 21)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1832>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the waypoint.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |waypoint|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1832> ^action <A1103>
            ^message-type command
            ^predicate <S1924>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S1924> ^2 <P90168>
            ^handle on1
            ^item-type predicate)
   (<P90168> ^handle new-object-id1
             ^item-type object
             ^predicates <P90169>
             ^predicates-copied true)
   (<P90169> ^dialog-object true
             ^spatial-shape waypoint
             ^visible false)
}


#   Pick up the box.
sp {elaborate*state*sentence*pick-up-the-box
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 22)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1951>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the box.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1951> ^action <A1001>
            ^arg1 <O8036>
            ^message-type command)
   (<A1001> ^action-type primitive
            ^handle pick-up1
            ^item-type action
            ^procedural <P90005>
            ^type action)
   (<P90005> ^arg1 <P90006>
             ^execution-operator execute-pick-up1
             ^op_name initiate-pick-up1)
   (<P90006> ^arg-type object
             ^id <O3>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
}


#   Put down the box.
sp {elaborate*state*sentence*put-down-the-box
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 23)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2056>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put down the box.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S2056> ^action <A1000>
            ^arg1 <O8036>
            ^message-type command)
   (<A1000> ^action-type primitive
            ^handle put-down1
            ^item-type action
            ^procedural <P90001>
            ^type action)
   (<P90001> ^arg1 <P90002>
             ^arg2 <P90003>
             ^execution-operator execute-put-down1
             ^op_name initiate-put-down1)
   (<P90002> ^arg-type object
             ^id <O1>)
   (<P90003> ^2 <O2>
             ^arg-type predicate
             ^id <P90004>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
}


#   You are in the kitchen.
sp {elaborate*state*sentence*you-are-in-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 24)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2161>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |You are in the kitchen.|)
   (<w0> ^spelling |you|
         ^next <w1>)
   (<w1> ^spelling |are|
         ^next <w2>)
   (<w2> ^spelling |in|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |kitchen|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S2161> ^arg1 <R10030>
            ^message-type object-description
            ^predicate <S2287>)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<A10063> ^action wait)
   (<P90052> ^handle rosie)
   (<S2287> ^2 <P90199>
            ^handle in1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   The soda is in the kitchen.
sp {elaborate*state*sentence*the-soda-is-in-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 25)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2310>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The soda is in the kitchen.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |soda|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |in|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S2310> ^arg1 <P90510>
            ^message-type object-description
            ^predicate <S2453>)
   (<P90510> ^handle new-object-id4
             ^item-type object
             ^predicates <P90511>
             ^predicates-copied true)
   (<P90511> ^dialog-object true
             ^shape soda1
             ^visible false)
   (<S2453> ^2 <P90199>
            ^handle in1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Go forward until you see an intersection.
sp {elaborate*state*sentence*go-forward-until-you-see-an-intersection
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 26)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2476>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go forward until you see an intersection.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |forward|
         ^next <w2>)
   (<w2> ^spelling |until|
         ^next <w3>)
   (<w3> ^spelling |you|
         ^next <w4>)
   (<w4> ^spelling |see|
         ^next <w5>)
   (<w5> ^spelling |an|
         ^next <w6>)
   (<w6> ^spelling |intersection|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S2476> ^action <A1103>
            ^arg2 <S2516>
            ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S2516> ^until-clause <S2595>)
   (<S2595> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90563>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90563> ^handle new-object-id5
             ^item-type object
             ^predicates <P90564>
             ^predicates-copied true)
}


#   Explore until you see a soda.
sp {elaborate*state*sentence*explore-until-you-see-a-soda
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 27)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2677>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Explore until you see a soda.|)
   (<w0> ^spelling |explore|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |you|
         ^next <w3>)
   (<w3> ^spelling |see|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |soda|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S2677> ^action <A1110>
            ^arg2 <S2708>
            ^message-type command)
   (<A1110> ^handle explore1
            ^item-type action
            ^procedural <E2>
            ^type action)
   (<E2> ^op_name initiate-explore1)
   (<S2708> ^until-clause <S2787>)
   (<S2787> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90584>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90584> ^handle new-object-id6
             ^item-type object
             ^predicates <P90585>
             ^predicates-copied true)
}


#   Drive until you sense a wall.
sp {elaborate*state*sentence*drive-until-you-sense-a-wall
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 28)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2869>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive until you sense a wall.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |you|
         ^next <w3>)
   (<w3> ^spelling |sense|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |wall|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S2869> ^action <A1103>
            ^arg2 <S2900>
            ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S2900> ^until-clause <S2979>)
   (<S2979> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90626>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90626> ^handle new-object-id7
             ^item-type object
             ^predicates <P90627>
             ^predicates-copied true)
}


#   Go until there is a doorway.
sp {elaborate*state*sentence*go-until-there-is-a-doorway
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 29)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3061>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go until there is a doorway.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |there|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |doorway|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S3061> ^action <A1103>
            ^arg2 <S3092>
            ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S3092> ^until-clause <S3214>)
   (<S3214> ^predicate <P12004>)
   (<P12004> ^handle door
             ^item-type concept
             ^output-word door
             ^property <P12000>)
}


#   Drive down the hall until you reach the end.
sp {elaborate*state*sentence*drive-down-the-hall-until-you-reach-the-end
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 30)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3241>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive down the hall until you reach the end.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |hall|
         ^next <w4>)
   (<w4> ^spelling |until|
         ^next <w5>)
   (<w5> ^spelling |you|
         ^next <w6>)
   (<w6> ^spelling |reach|
         ^next <w7>)
   (<w7> ^spelling |the|
         ^next <w8>)
   (<w8> ^spelling |end|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3241> ^action <A1103>
            ^arg1 <P12003>
            ^arg2 <S3315>
            ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<P12003> ^handle hall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
   (<S3315> ^until-clause <S3394>)
   (<S3394> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90687>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90687> ^handle new-object-id8
             ^item-type object
             ^predicates <P90688>
             ^predicates-copied true)
}


#   Follow the right wall until there is a doorway.
sp {elaborate*state*sentence*follow-the-right-wall-until-there-is-a-doorway
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 31)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3476>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow the right wall until there is a doorway.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |right|
         ^next <w3>)
   (<w3> ^spelling |wall|
         ^next <w4>)
   (<w4> ^spelling |until|
         ^next <w5>)
   (<w5> ^spelling |there|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |a|
         ^next <w8>)
   (<w8> ^spelling |doorway|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3476> ^action <A1104>
            ^arg1 <P9001>
            ^arg1 <P12002>
            ^arg2 <S3558>
            ^message-type command)
   (<A1104> ^action-type primitive
            ^handle follow-wall1
            ^item-type action
            ^procedural <P90027>
            ^type action)
   (<P90027> ^arg1 <P90028>
             ^execution-operator execute-follow-wall1
             ^op_name initiate-follow-wall1)
   (<P90028> ^arg-type concept
             ^id <C6>)
   (<P9001> ^handle right1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
   (<P12002> ^handle wall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
   (<S3558> ^until-clause <S3680>)
   (<S3680> ^predicate <P12004>)
   (<P12004> ^handle door
             ^item-type concept
             ^output-word door
             ^property <P12000>)
}


#   Follow the right wall until you see two doors.
sp {elaborate*state*sentence*follow-the-right-wall-until-you-see-two-doors
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 32)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3707>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow the right wall until you see two doors.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |right|
         ^next <w3>)
   (<w3> ^spelling |wall|
         ^next <w4>)
   (<w4> ^spelling |until|
         ^next <w5>)
   (<w5> ^spelling |you|
         ^next <w6>)
   (<w6> ^spelling |see|
         ^next <w7>)
   (<w7> ^spelling |two|
         ^next <w8>)
   (<w8> ^spelling |doors|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3707> ^action <A1104>
            ^arg1 <P9001>
            ^arg1 <P12002>
            ^arg2 <S3789>
            ^message-type command)
   (<A1104> ^action-type primitive
            ^handle follow-wall1
            ^item-type action
            ^procedural <P90027>
            ^type action)
   (<P90027> ^arg1 <P90028>
             ^execution-operator execute-follow-wall1
             ^op_name initiate-follow-wall1)
   (<P90028> ^arg-type concept
             ^id <C6>)
   (<P9001> ^handle right1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
   (<P12002> ^handle wall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
   (<S3789> ^until-clause <S3868>)
   (<S3868> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90754>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90754> ^handle new-object-id9
             ^item-type object
             ^predicates <P90755>
             ^predicates-copied true)
}


#   Follow the right wall until you reach the end.
sp {elaborate*state*sentence*follow-the-right-wall-until-you-reach-the-end
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 33)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3950>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow the right wall until you reach the end.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |right|
         ^next <w3>)
   (<w3> ^spelling |wall|
         ^next <w4>)
   (<w4> ^spelling |until|
         ^next <w5>)
   (<w5> ^spelling |you|
         ^next <w6>)
   (<w6> ^spelling |reach|
         ^next <w7>)
   (<w7> ^spelling |the|
         ^next <w8>)
   (<w8> ^spelling |end|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3950> ^action <A1104>
            ^arg1 <P9001>
            ^arg1 <P12002>
            ^arg2 <S4032>
            ^message-type command)
   (<A1104> ^action-type primitive
            ^handle follow-wall1
            ^item-type action
            ^procedural <P90027>
            ^type action)
   (<P90027> ^arg1 <P90028>
             ^execution-operator execute-follow-wall1
             ^op_name initiate-follow-wall1)
   (<P90028> ^arg-type concept
             ^id <C6>)
   (<P9001> ^handle right1
            ^item-type concept
            ^property <P9000>
            ^side -1
            ^yaw 1.1)
   (<P9000> ^handle relative-direction1
            ^item-type property)
   (<P12002> ^handle wall1
             ^item-type concept
             ^property <P12000>)
   (<P12000> ^handle spatial-shape
             ^item-type property
             ^type visual)
   (<S4032> ^until-clause <S4111>)
   (<S4111> ^action <A1111>
            ^agent <R10030>
            ^arg1 <P90687>)
   (<A1111> ^handle sense1
            ^item-type action
            ^procedural <E3>
            ^type action)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<P90687> ^handle new-object-id8
             ^item-type object
             ^predicates <P90688>
             ^predicates-copied true)
}


#   Drive forward one meter.
sp {elaborate*state*sentence*drive-forward-one-meter
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 34)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4193>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive forward one meter.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |forward|
         ^next <w2>)
   (<w2> ^spelling |one|
         ^next <w3>)
   (<w3> ^spelling |meter|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S4193> ^action <A1103>
            ^arg1 <C47>
            ^arg1 <P10001>
            ^message-type command)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<C47> ^quantity <C32>)
   (<C32> ^handle 1
          ^property <P11000>)
   (<P11000> ^handle number
             ^item-type property
             ^type number)
   (<P10001> ^handle meters
             ^item-type concept
             ^property <P10000>)
   (<P10000> ^handle unit
             ^item-type property
             ^type unit)
}


#   Drive slowly to the kitchen.
sp {elaborate*state*sentence*drive-slowly-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 35)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4294>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Drive slowly to the kitchen.|)
   (<w0> ^spelling |drive|
         ^next <w1>)
   (<w1> ^spelling |slowly|
         ^next <w2>)
   (<w2> ^spelling |to|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |kitchen|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S4294> ^action <A1103>
            ^message-type command
            ^modifier <S10>
            ^predicate <S4403>)
   (<A1103> ^action-type composite
            ^handle go1
            ^item-type action
            ^procedural <P90025>
            ^type action)
   (<P90025> ^arg1 <P90026>
             ^initiation-operator initiate-go1)
   (<P90026> ^arg-type concept
             ^id <C5>
             ^optional true)
   (<S10> ^handle slow1)
   (<S4403> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Deliver [*known*] the box to the kitchen.
sp {elaborate*state*sentence*deliver-the-box-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 36)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4430>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Deliver the box to the kitchen.|)
   (<w0> ^spelling |deliver|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |box|
         ^next <w3>)
   (<w3> ^spelling |to|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S4430> ^action <A1018>
            ^arg1 <O8036>
            ^arg2 <S4560>
            ^message-type command)
   (<A1018> ^action-type composite
            ^handle deliver1
            ^item-type action
            ^procedural <P90015>
            ^type action)
   (<P90015> ^arg1 <P90016>
             ^arg2 <P90017>
             ^op_name initiate-deliver1)
   (<P90016> ^arg-type object
             ^id <O8>)
   (<P90017> ^2 <O9>
             ^arg-type predicate
             ^id <P90018>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
   (<S4560> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Take [*new*] the box to the kitchen.
sp {elaborate*state*sentence*take-the-box-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 37)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4587>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Take the box to the kitchen.|)
   (<w0> ^spelling |take|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |box|
         ^next <w3>)
   (<w3> ^spelling |to|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S4587> ^action <R13159>
            ^arg1 <O8036>
            ^arg2 <S4730>
            ^message-type command
            ^message-type new-verb)
   (<R13159> ^handle take10
             ^item-type action
             ^word-structure <N10740>)
   (<N10740> ^new-action true
             ^referent <R13159>
             ^spelling take
             ^super-type <T999>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
   (<S4730> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   Take [*old*] the box to the kitchen.
sp {elaborate*state*sentence*take-the-box-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 38)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4753>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Take the box to the kitchen.|)
   (<w0> ^spelling |take|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |box|
         ^next <w3>)
   (<w3> ^spelling |to|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S4753> ^action <R13159>
            ^arg1 <O8036>
            ^arg2 <S4883>
            ^message-type command)
   (<R13159> ^handle take10
             ^item-type action
             ^word-structure <N10740>)
   (<N10740> ^new-action true
             ^referent <R13159>
             ^spelling take
             ^super-type <T999>)
   (<T999> ^assigners <V6>
           ^assigners <V7>
           ^assigners <V8>
           ^att test
           ^converts-to VP
           ^number singular
           ^semantic-structure action
           ^structure-type V
           ^tense present)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
   (<S4883> ^2 <P90199>
            ^handle on1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
   (<P90200> ^dialog-object true
             ^location kitchen1
             ^visible false)
}


#   The goal is that the box is in the kitchen.
sp {elaborate*state*sentence*the-goal-is-that-the-box-is-in-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 39)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4910>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the box is in the kitchen.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |box|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |kitchen|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S4910> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S4992>)
   (<G4> ^handle goal1
         ^property <C19>)
   (<C19> ^handle concept
          ^type conceptual)
   (<S4992> ^arg1 <O8036>
            ^predicate <S5166>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<P90062> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id small-green-box1
             ^shape box1
             ^size small1
             ^status live)
   (<S5166> ^2 <P90199>
            ^handle in1
            ^item-type predicate)
   (<P90199> ^handle new-object-id2
             ^item-type object
             ^predicates <P90200>
             ^predicates-copied true)
}


#   The goal is that you are not holding the box.
sp {elaborate*state*sentence*the-goal-is-that-you-are-not-holding-the-box
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 40)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5189>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that you are not holding the box.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |you|
         ^next <w5>)
   (<w5> ^spelling |are|
         ^next <w6>)
   (<w6> ^spelling |not|
         ^next <w7>)
   (<w7> ^spelling |holding|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |box|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S5189> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S5271>)
   (<G4> ^handle goal1
         ^property <C19>)
   (<C19> ^handle concept
          ^type conceptual)
   (<S5271> ^arg1 <R10030>
            ^modifier <N10003>
            ^predicate <S5437>)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<A10063> ^action wait)
   (<P90052> ^handle rosie)
   (<N10003> ^handle negation)
   (<S5437> ^2 <O8036>
            ^handle holding1
            ^item-type predicate)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
}


#   The goal is that the box is in the kitchen and the sphere is purple.
sp {elaborate*state*sentence*the-goal-is-that-the-box-is-in-the-kitchen-and-the-sphere-is-purple
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 41)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5460>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the box is in the kitchen and the sphere is purple.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |box|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |kitchen|
         ^next <w10>)
   (<w10> ^spelling |and|
         ^next <w11>)
   (<w11> ^spelling |the|
         ^next <w12>)
   (<w12> ^spelling |sphere|
         ^next <w13>)
   (<w13> ^spelling |is|
         ^next <w14>)
   (<w14> ^spelling |purple|
         ^next <w15>)
   (<w15> ^spelling |.|
         ^next nil)
   (<S5460> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S5542>)
   (<G4> ^handle goal1
         ^property <C19>)
   (<C19> ^handle concept
          ^type conceptual)
   (<S5542> ^subclause <S5642>
            ^subclause <S5825>)
   (<S5642> ^arg1 <O8036>
            ^predicate <S5716>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<S5716> ^2 <P90199>
            ^handle in1
            ^item-type predicate)
   (<S5825> ^arg1 <O8033>
            ^predicate <P1006>)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90059>)
   (<P1006> ^handle purple1
            ^item-type predicate
            ^property <P1000>)
}


#   The sphere is red.
sp {elaborate*state*sentence*the-sphere-is-red
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 42)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5882>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The sphere is red.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |sphere|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S5882> ^arg1 <O8033>
            ^message-type object-description
            ^predicate <P1001>)
   (<O8033> ^handle large-green-sphere1
            ^item-type object
            ^predicates <P90059>)
   (<P90059> ^arm-status not-grabbed
             ^category block1
             ^color green1
             ^movable true
             ^object-id large-green-sphere1
             ^shape sphere1
             ^size large1
             ^status live)
   (<P1001> ^handle red1
            ^item-type predicate
            ^property <P1000>)
   (<P1000> ^handle color
            ^item-type property
            ^type visual)
}


#   The goal is that the box is in the kitchen and you are not holding the box.
sp {elaborate*state*sentence*the-goal-is-that-the-box-is-in-the-kitchen-and-you-are-not-holding-the-box
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 43)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S6008>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the box is in the kitchen and you are not holding the box.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |box|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |kitchen|
         ^next <w10>)
   (<w10> ^spelling |and|
         ^next <w11>)
   (<w11> ^spelling |you|
         ^next <w12>)
   (<w12> ^spelling |are|
         ^next <w13>)
   (<w13> ^spelling |not|
         ^next <w14>)
   (<w14> ^spelling |holding|
         ^next <w15>)
   (<w15> ^spelling |the|
         ^next <w16>)
   (<w16> ^spelling |box|
         ^next <w17>)
   (<w17> ^spelling |.|
         ^next nil)
   (<S6008> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S6090>)
   (<G4> ^handle goal1
         ^property <C19>)
   (<C19> ^handle concept
          ^type conceptual)
   (<S6090> ^subclause <S6190>
            ^subclause <S6348>)
   (<S6190> ^arg1 <O8036>
            ^predicate <S6264>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90062>)
   (<S6264> ^2 <P90199>
            ^handle in1
            ^item-type predicate)
   (<S6348> ^arg1 <R10030>
            ^modifier <N10003>
            ^predicate <S6439>)
   (<R10030> ^arm <A10063>
             ^handle rosie
             ^item-type object
             ^predicates <P90052>)
   (<N10003> ^handle negation)
   (<S6439> ^2 <O8036>
            ^handle holding1
            ^item-type predicate)
}


